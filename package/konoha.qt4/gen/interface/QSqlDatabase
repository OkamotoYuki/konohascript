input_urn
/home/onoda/Documents/qt-everywhere-opensource-src-4.7.4/doc/html/qsqldatabase.html

output_urn
QSqlDatabase

inherits

public_types

properties

public_functions
QSqlDatabase ()
QSqlDatabase ( const QSqlDatabase & other )
~QSqlDatabase ()
 void close ()
 bool commit ()
 QString connectOptions () const
 QString connectionName () const
 QString databaseName () const
 QSqlDriver * driver () const
 QString driverName () const
 QSqlQuery exec ( const QString & query = QString() ) const
 QString hostName () const
 bool isOpen () const
 bool isOpenError () const
 bool isValid () const
 QSqlError lastError () const
 QSql::NumericalPrecisionPolicy numericalPrecisionPolicy () const
 bool open ()
 bool open ( const QString & user, const QString & password )
 QString password () const
 int port () const
 QSqlIndex primaryIndex ( const QString & tablename ) const
 QSqlRecord record ( const QString & tablename ) const
 bool rollback ()
 void setConnectOptions ( const QString & options = QString() )
 void setDatabaseName ( const QString & name )
 void setHostName ( const QString & host )
 void setNumericalPrecisionPolicy ( QSql::NumericalPrecisionPolicy precisionPolicy )
 void setPassword ( const QString & password )
 void setPort ( int port )
 void setUserName ( const QString & name )
 QStringList tables ( QSql::TableType type = QSql::Tables ) const
 bool transaction ()
 QString userName () const
 QSqlDatabase & operator= ( const QSqlDatabase & other )

public_slots

signals

static_public_members
 QSqlDatabase addDatabase ( const QString & type, const QString & connectionName = QLatin1String( defaultConnection ) )
 QSqlDatabase addDatabase ( QSqlDriver * driver, const QString & connectionName = QLatin1String( defaultConnection ) )
 QSqlDatabase cloneDatabase ( const QSqlDatabase & other, const QString & connectionName )
 QStringList connectionNames ()
 bool contains ( const QString & connectionName = QLatin1String( defaultConnection ) )
 QSqlDatabase database ( const QString & connectionName = QLatin1String( defaultConnection ), bool open = true )
 QStringList drivers ()
 bool isDriverAvailable ( const QString & name )
 void registerSqlDriver ( const QString & name, QSqlDriverCreatorBase * creator )
 void removeDatabase ( const QString & connectionName )

protected_functions
QSqlDatabase ( const QString & type )
QSqlDatabase ( QSqlDriver * driver )

reimplemented_public_functions

reimplemented_protected_functions

protected_slots

related_non_members

templateClass
false

abstractClass
false

enbeddedClass
false

typedefed_objects

parent_typedefed_objects

enums

parent_enums

parent_index

parent_name


include "lib:gluelink"
@Native class GL;
@Native class GLUquadric;
@Native class GLUnurbs;
@Native class GLUtesselator;
@Native class GLVoidPtr;
@Native class GLhandleARB;
@Native class GLsync;
@Native void GL.glActiveTextureARB(int texture);
@Native void GL.glClientActiveTextureARB(int texture);
@Native void GL.glMultiTexCoord1dARB(int target, double s);
@Native void GL.glMultiTexCoord1dvARB(int target, float[] v);
@Native void GL.glMultiTexCoord1fARB(int target, double s);
@Native void GL.glMultiTexCoord1fvARB(int target, float[] v);
@Native void GL.glMultiTexCoord1iARB(int target, int s);
@Native void GL.glMultiTexCoord1ivARB(int target, int[] v);
@Native void GL.glMultiTexCoord1sARB(int target, int s);
@Native void GL.glMultiTexCoord1svARB(int target, int[] v);
@Native void GL.glMultiTexCoord2dARB(int target, double s, double t);
@Native void GL.glMultiTexCoord2dvARB(int target, float[] v);
@Native void GL.glMultiTexCoord2fARB(int target, double s, double t);
@Native void GL.glMultiTexCoord2fvARB(int target, float[] v);
@Native void GL.glMultiTexCoord2iARB(int target, int s, int t);
@Native void GL.glMultiTexCoord2ivARB(int target, int[] v);
@Native void GL.glMultiTexCoord2sARB(int target, int s, int t);
@Native void GL.glMultiTexCoord2svARB(int target, int[] v);
@Native void GL.glMultiTexCoord3dARB(int target, double s, double t, double r);
@Native void GL.glMultiTexCoord3dvARB(int target, float[] v);
@Native void GL.glMultiTexCoord3fARB(int target, double s, double t, double r);
@Native void GL.glMultiTexCoord3fvARB(int target, float[] v);
@Native void GL.glMultiTexCoord3iARB(int target, int s, int t, int r);
@Native void GL.glMultiTexCoord3ivARB(int target, int[] v);
@Native void GL.glMultiTexCoord3sARB(int target, int s, int t, int r);
@Native void GL.glMultiTexCoord3svARB(int target, int[] v);
@Native void GL.glMultiTexCoord4dARB(int target, double s, double t, double r, double q);
@Native void GL.glMultiTexCoord4dvARB(int target, float[] v);
@Native void GL.glMultiTexCoord4fARB(int target, double s, double t, double r, double q);
@Native void GL.glMultiTexCoord4fvARB(int target, float[] v);
@Native void GL.glMultiTexCoord4iARB(int target, int s, int t, int r, int q);
@Native void GL.glMultiTexCoord4ivARB(int target, int[] v);
@Native void GL.glMultiTexCoord4sARB(int target, int s, int t, int r, int q);
@Native void GL.glMultiTexCoord4svARB(int target, int[] v);
@Native void GL.glLoadTransposeMatrixfARB(float[] m);
@Native void GL.glLoadTransposeMatrixdARB(float[] m);
@Native void GL.glMultTransposeMatrixfARB(float[] m);
@Native void GL.glMultTransposeMatrixdARB(float[] m);
@Native void GL.glSampleCoverageARB(double value, boolean invert);
@Native void GL.glCompressedTexImage3DARB(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexImage2DARB(int target, int level, int internalformat, int width, int height, int border, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexImage1DARB(int target, int level, int internalformat, int width, int border, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexSubImage3DARB(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format_, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexSubImage2DARB(int target, int level, int xoffset, int yoffset, int width, int height, int format_, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexSubImage1DARB(int target, int level, int xoffset, int width, int format_, int imageSize, GLVoidPtr data);
@Native void GL.glGetCompressedTexImageARB(int target, int level, GLVoidPtr data);
@Native void GL.glWeightbvARB(int size, byte[] weights);
@Native void GL.glWeightsvARB(int size, int[] weights);
@Native void GL.glWeightivARB(int size, int[] weights);
@Native void GL.glWeightfvARB(int size, float[] weights);
@Native void GL.glWeightdvARB(int size, float[] weights);
@Native void GL.glWeightubvARB(int size, byte[] weights);
@Native void GL.glWeightusvARB(int size, int[] weights);
@Native void GL.glWeightuivARB(int size, int[] weights);
@Native void GL.glWeightPointerARB(int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glVertexBlendARB(int count);
@Native void GL.glWindowPos2dARB(double x, double y);
@Native void GL.glWindowPos2dvARB(float[] p);
@Native void GL.glWindowPos2fARB(double x, double y);
@Native void GL.glWindowPos2fvARB(float[] p);
@Native void GL.glWindowPos2iARB(int x, int y);
@Native void GL.glWindowPos2ivARB(int[] p);
@Native void GL.glWindowPos2sARB(int x, int y);
@Native void GL.glWindowPos2svARB(int[] p);
@Native void GL.glWindowPos3dARB(double x, double y, double z);
@Native void GL.glWindowPos3dvARB(float[] p);
@Native void GL.glWindowPos3fARB(double x, double y, double z);
@Native void GL.glWindowPos3fvARB(float[] p);
@Native void GL.glWindowPos3iARB(int x, int y, int z);
@Native void GL.glWindowPos3ivARB(int[] p);
@Native void GL.glWindowPos3sARB(int x, int y, int z);
@Native void GL.glWindowPos3svARB(int[] p);
@Native void GL.glGenQueriesARB(int n, int[] ids);
@Native void GL.glDeleteQueriesARB(int n, int[] ids);
@Native boolean GL.glIsQueryARB(int id);
@Native void GL.glBeginQueryARB(int target, int id);
@Native void GL.glEndQueryARB(int target);
@Native void GL.glGetQueryivARB(int target, int pname, int[] params);
@Native void GL.glGetQueryObjectivARB(int id, int pname, int[] params);
@Native void GL.glGetQueryObjectuivARB(int id, int pname, int[] params);
@Native void GL.glPointParameterfARB(int pname, double param);
@Native void GL.glPointParameterfvARB(int pname, float[] params);
@Native void GL.glBindProgramARB(int target, int program);
@Native void GL.glDeleteProgramsARB(int n, int[] programs);
@Native void GL.glGenProgramsARB(int n, int[] programs);
@Native boolean GL.glIsProgramARB(int program);
@Native void GL.glProgramEnvParameter4dARB(int target, int index, double x, double y, double z, double w);
@Native void GL.glProgramEnvParameter4dvARB(int target, int index, float[] params);
@Native void GL.glProgramEnvParameter4fARB(int target, int index, double x, double y, double z, double w);
@Native void GL.glProgramEnvParameter4fvARB(int target, int index, float[] params);
@Native void GL.glProgramLocalParameter4dARB(int target, int index, double x, double y, double z, double w);
@Native void GL.glProgramLocalParameter4dvARB(int target, int index, float[] params);
@Native void GL.glProgramLocalParameter4fARB(int target, int index, double x, double y, double z, double w);
@Native void GL.glProgramLocalParameter4fvARB(int target, int index, float[] params);
@Native void GL.glGetProgramEnvParameterdvARB(int target, int index, float[] params);
@Native void GL.glGetProgramEnvParameterfvARB(int target, int index, float[] params);
@Native void GL.glProgramEnvParameters4fvEXT(int target, int index, int count, float[] params);
@Native void GL.glProgramLocalParameters4fvEXT(int target, int index, int count, float[] params);
@Native void GL.glGetProgramLocalParameterdvARB(int target, int index, float[] params);
@Native void GL.glGetProgramLocalParameterfvARB(int target, int index, float[] params);
@Native void GL.glProgramStringARB(int target, int format_, int len, String data/* TODO */);
@Native void GL.glGetProgramStringARB(int target, int pname, String data/* TODO */);
@Native void GL.glGetProgramivARB(int target, int pname, int[] params);
@Native void GL.glVertexAttrib1dARB(int index, double x);
@Native void GL.glVertexAttrib1dvARB(int index, float[] v);
@Native void GL.glVertexAttrib1fARB(int index, double x);
@Native void GL.glVertexAttrib1fvARB(int index, float[] v);
@Native void GL.glVertexAttrib1sARB(int index, int x);
@Native void GL.glVertexAttrib1svARB(int index, int[] v);
@Native void GL.glVertexAttrib2dARB(int index, double x, double y);
@Native void GL.glVertexAttrib2dvARB(int index, float[] v);
@Native void GL.glVertexAttrib2fARB(int index, double x, double y);
@Native void GL.glVertexAttrib2fvARB(int index, float[] v);
@Native void GL.glVertexAttrib2sARB(int index, int x, int y);
@Native void GL.glVertexAttrib2svARB(int index, int[] v);
@Native void GL.glVertexAttrib3dARB(int index, double x, double y, double z);
@Native void GL.glVertexAttrib3dvARB(int index, float[] v);
@Native void GL.glVertexAttrib3fARB(int index, double x, double y, double z);
@Native void GL.glVertexAttrib3fvARB(int index, float[] v);
@Native void GL.glVertexAttrib3sARB(int index, int x, int y, int z);
@Native void GL.glVertexAttrib3svARB(int index, int[] v);
@Native void GL.glVertexAttrib4NbvARB(int index, byte[] v);
@Native void GL.glVertexAttrib4NivARB(int index, int[] v);
@Native void GL.glVertexAttrib4NsvARB(int index, int[] v);
@Native void GL.glVertexAttrib4NubARB(int index, int x, int y, int z, int w);
@Native void GL.glVertexAttrib4NubvARB(int index, byte[] v);
@Native void GL.glVertexAttrib4NuivARB(int index, int[] v);
@Native void GL.glVertexAttrib4NusvARB(int index, int[] v);
@Native void GL.glVertexAttrib4bvARB(int index, byte[] v);
@Native void GL.glVertexAttrib4dARB(int index, double x, double y, double z, double w);
@Native void GL.glVertexAttrib4dvARB(int index, float[] v);
@Native void GL.glVertexAttrib4fARB(int index, double x, double y, double z, double w);
@Native void GL.glVertexAttrib4fvARB(int index, float[] v);
@Native void GL.glVertexAttrib4ivARB(int index, int[] v);
@Native void GL.glVertexAttrib4sARB(int index, int x, int y, int z, int w);
@Native void GL.glVertexAttrib4svARB(int index, int[] v);
@Native void GL.glVertexAttrib4ubvARB(int index, byte[] v);
@Native void GL.glVertexAttrib4uivARB(int index, int[] v);
@Native void GL.glVertexAttrib4usvARB(int index, int[] v);
@Native void GL.glVertexAttribPointerARB(int index, int size, int type, boolean normalized, int stride, GLVoidPtr pointer);
@Native void GL.glDisableVertexAttribArrayARB(int index);
@Native void GL.glEnableVertexAttribArrayARB(int index);
@Native void GL.glGetVertexAttribPointervARB(int index, int pname, GLVoidPtr[] pointer);
@Native void GL.glGetVertexAttribdvARB(int index, int pname, float[] params);
@Native void GL.glGetVertexAttribfvARB(int index, int pname, float[] params);
@Native void GL.glGetVertexAttribivARB(int index, int pname, int[] params);
@Native void GL.glDeleteObjectARB(GLhandleARB obj);
@Native GLhandleARB GL.glGetHandleARB(int pname);
@Native void GL.glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
@Native GLhandleARB GL.glCreateShaderObjectARB(int shaderType);
@Native void GL.glShaderSourceARB(GLhandleARB shaderObj, int count, String s, int[] length);
@Native void GL.glCompileShaderARB(GLhandleARB shaderObj);
@Native GLhandleARB GL.glCreateProgramObjectARB();
@Native void GL.glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
@Native void GL.glLinkProgramARB(GLhandleARB programObj);
@Native void GL.glUseProgramObjectARB(GLhandleARB programObj);
@Native void GL.glValidateProgramARB(GLhandleARB programObj);
@Native void GL.glUniform1fARB(int location, double v0);
@Native void GL.glUniform2fARB(int location, double v0, double v1);
@Native void GL.glUniform3fARB(int location, double v0, double v1, double v2);
@Native void GL.glUniform4fARB(int location, double v0, double v1, double v2, double v3);
@Native void GL.glUniform1iARB(int location, int v0);
@Native void GL.glUniform2iARB(int location, int v0, int v1);
@Native void GL.glUniform3iARB(int location, int v0, int v1, int v2);
@Native void GL.glUniform4iARB(int location, int v0, int v1, int v2, int v3);
@Native void GL.glUniform1fvARB(int location, int count, float[] value);
@Native void GL.glUniform2fvARB(int location, int count, float[] value);
@Native void GL.glUniform3fvARB(int location, int count, float[] value);
@Native void GL.glUniform4fvARB(int location, int count, float[] value);
@Native void GL.glUniform1ivARB(int location, int count, int[] value);
@Native void GL.glUniform2ivARB(int location, int count, int[] value);
@Native void GL.glUniform3ivARB(int location, int count, int[] value);
@Native void GL.glUniform4ivARB(int location, int count, int[] value);
@Native void GL.glUniformMatrix2fvARB(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix3fvARB(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix4fvARB(int location, int count, boolean transpose, float[] value);
@Native void GL.glGetObjectParameterfvARB(GLhandleARB obj, int pname, float[] params);
@Native void GL.glGetObjectParameterivARB(GLhandleARB obj, int pname, int[] params);
@Native void GL.glGetInfoLogARB(GLhandleARB obj, int maxLength, int[] length, String infoLog);
@Native void GL.glGetAttachedObjectsARB(GLhandleARB containerObj, int maxCount, int[] count, GLhandleARB obj);
@Native int GL.glGetUniformLocationARB(GLhandleARB programObj, String name);
@Native void GL.glGetActiveUniformARB(GLhandleARB programObj, int index, int maxLength, int[] length, int[] size, int[] type, String name);
@Native void GL.glGetUniformfvARB(GLhandleARB programObj, int location, float[] params);
@Native void GL.glGetUniformivARB(GLhandleARB programObj, int location, int[] params);
@Native void GL.glGetShaderSourceARB(GLhandleARB obj, int maxLength, int[] length, String source);
@Native void GL.glBindAttribLocationARB(GLhandleARB programObj, int index, String name);
@Native void GL.glGetActiveAttribARB(GLhandleARB programObj, int index, int maxLength, int[] length, int[] size, int[] type, String name);
@Native int GL.glGetAttribLocationARB(GLhandleARB programObj, String name);
@Native void GL.glBindBufferARB(int target, int buffer);
@Native void GL.glDeleteBuffersARB(int n, int[] buffers);
@Native void GL.glGenBuffersARB(int n, int[] buffers);
@Native boolean GL.glIsBufferARB(int buffer);
@Native void GL.glBufferDataARB(int target, intptrARB size, GLVoidPtr data, int usage);
@Native void GL.glBufferSubDataARB(int target, intARB offset, intptrARB size, GLVoidPtr data);
@Native void GL.glGetBufferSubDataARB(int target, intARB offset, intptrARB size, GLVoidPtr data);
@Native GLVoidPtr GL.glMapBufferARB(int target, int access);
@Native boolean GL.glUnmapBufferARB(int target);
@Native void GL.glGetBufferParameterivARB(int target, int pname, int[] params);
@Native void GL.glGetBufferPointervARB(int target, int pname, GLVoidPtr[] params);
@Native void GL.glDrawBuffersARB(int n, int[] bufs);
@Native void GL.glClampColorARB(int target, int clamp);
@Native void GL.glDrawArraysInstancedARB(int mode, int first, int count, int primcount);
@Native void GL.glDrawElementsInstancedARB(int mode, int count, int type, GLVoidPtr indices, int primcount);
@Native void GL.glVertexAttribDivisorARB(int index, int divisor);
@Native void GL.glDrawElementsBaseVertex(int mode, int count, int type, GLVoidPtr indices, int base_vertex);
@Native void GL.glDrawRangeElementsBaseVertex(int mode, int start, int end, int count, int type, GLVoidPtr indices, int base_vertex);
@Native void GL.glDrawElementsInstancedBaseVertex(int mode, int count, int type, GLVoidPtr indices, int primcount, int base_vertex);
@Native void GL.glMultiDrawElementsBaseVertex(int mode, int[] count, int type, GLVoidPtr[] indices, int primcount, int[] base_vertex);
@Native GLsync GL.glFenceSync(int condition, int flags);
@Native boolean GL.glIsSync(GLsync sync);
@Native void GL.glDeleteSync(GLsync sync);
@Native int GL.glClientWaitSync(GLsync sync, int flags, int64 timeout);
@Native void GL.glWaitSync(GLsync sync, int flags, int64 timeout);
@Native void GL.glGetInteger64v(int pname, int64* params);
@Native void GL.glGetSynciv(GLsync sync, int pname, int bufSize, int[] length, int[] values);
@Native void GL.glBlendColorEXT(double red, double green, double blue, double alpha);
@Native void GL.glBlendEquationEXT(int mode);
@Native void GL.glDrawRangeElementsEXT(int mode, int start, int end, int count, int type, GLVoidPtr indices);
@Native void GL.glSecondaryColor3bEXT(int red, int green, int blue);
@Native void GL.glSecondaryColor3bvEXT(byte[] v);
@Native void GL.glSecondaryColor3dEXT(double red, double green, double blue);
@Native void GL.glSecondaryColor3dvEXT(float[] v);
@Native void GL.glSecondaryColor3fEXT(double red, double green, double blue);
@Native void GL.glSecondaryColor3fvEXT(float[] v);
@Native void GL.glSecondaryColor3iEXT(int red, int green, int blue);
@Native void GL.glSecondaryColor3ivEXT(int[] v);
@Native void GL.glSecondaryColor3sEXT(int red, int green, int blue);
@Native void GL.glSecondaryColor3svEXT(int[] v);
@Native void GL.glSecondaryColor3ubEXT(int red, int green, int blue);
@Native void GL.glSecondaryColor3ubvEXT(byte[] v);
@Native void GL.glSecondaryColor3uiEXT(int red, int green, int blue);
@Native void GL.glSecondaryColor3uivEXT(int[] v);
@Native void GL.glSecondaryColor3usEXT(int red, int green, int blue);
@Native void GL.glSecondaryColor3usvEXT(int[] v);
@Native void GL.glSecondaryColorPointerEXT(int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glMultiDrawArraysEXT(int mode, int[] first, int[] count, int primcount);
@Native void GL.glMultiDrawElementsEXT(int mode, int[] count, int type, GLVoidPtr[] indices, int primcount);
@Native void GL.glFogCoordfEXT(double coord);
@Native void GL.glFogCoordfvEXT(float[] coord);
@Native void GL.glFogCoorddEXT(double coord);
@Native void GL.glFogCoorddvEXT(float[] coord);
@Native void GL.glFogCoordPointerEXT(int type, int stride, GLVoidPtr pointer);
@Native void GL.glBlendFuncSeparateEXT(int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
@Native void GL.glActiveStencilFaceEXT(int face);
@Native void GL.glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);
@Native void GL.glBlendEquationSeparateEXT(int modeRGB, int modeAlpha);
@Native boolean GL.glIsRenderbufferEXT(int renderbuffer);
@Native void GL.glBindRenderbufferEXT(int target, int renderbuffer);
@Native void GL.glDeleteRenderbuffersEXT(int n, int[] renderbuffers);
@Native void GL.glGenRenderbuffersEXT(int n, int[] renderbuffers);
@Native void GL.glRenderbufferStorageEXT(int target, int internalformat, int width, int height);
@Native void GL.glGetRenderbufferParameterivEXT(int target, int pname, int[] params);
@Native boolean GL.glIsFramebufferEXT(int framebuffer);
@Native void GL.glBindFramebufferEXT(int target, int framebuffer);
@Native void GL.glDeleteFramebuffersEXT(int n, int[] framebuffers);
@Native void GL.glGenFramebuffersEXT(int n, int[] framebuffers);
@Native int GL.glCheckFramebufferStatusEXT(int target);
@Native void GL.glFramebufferTexture1DEXT(int target, int attachment, int textarget, int texture, int level);
@Native void GL.glFramebufferTexture2DEXT(int target, int attachment, int textarget, int texture, int level);
@Native void GL.glFramebufferTexture3DEXT(int target, int attachment, int textarget, int texture, int level, int zoffset);
@Native void GL.glFramebufferRenderbufferEXT(int target, int attachment, int renderbuffertarget, int renderbuffer);
@Native void GL.glGetFramebufferAttachmentParameterivEXT(int target, int attachment, int pname, int[] params);
@Native void GL.glGenerateMipmapEXT(int target);
@Native void GL.glBlitFramebufferEXT(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
@Native void GL.glRenderbufferStorageMultisampleEXT(int target, int samples, int internalformat, int width, int height);
@Native void GL.glProgramParameteriEXT(int program, int pname, int value);
@Native void GL.glFramebufferTextureEXT(int target, int attachment, int texture, int level);
@Native void GL.glFramebufferTextureFaceEXT(int target, int attachment, int texture, int level, int face);
@Native void GL.glFramebufferTextureLayerEXT(int target, int attachment, int texture, int level, int layer);
@Native boolean GL.glIsRenderbuffer(int renderbuffer);
@Native void GL.glBindRenderbuffer(int target, int renderbuffer);
@Native void GL.glDeleteRenderbuffers(int n, int[] renderbuffers);
@Native void GL.glGenRenderbuffers(int n, int[] renderbuffers);
@Native void GL.glRenderbufferStorage(int target, int internalformat, int width, int height);
@Native void GL.glGetRenderbufferParameteriv(int target, int pname, int[] params);
@Native boolean GL.glIsFramebuffer(int framebuffer);
@Native void GL.glBindFramebuffer(int target, int framebuffer);
@Native void GL.glDeleteFramebuffers(int n, int[] framebuffers);
@Native void GL.glGenFramebuffers(int n, int[] framebuffers);
@Native int GL.glCheckFramebufferStatus(int target);
@Native void GL.glFramebufferTexture1D(int target, int attachment, int textarget, int texture, int level);
@Native void GL.glFramebufferTexture2D(int target, int attachment, int textarget, int texture, int level);
@Native void GL.glFramebufferTexture3D(int target, int attachment, int textarget, int texture, int level, int zoffset);
@Native void GL.glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, int renderbuffer);
@Native void GL.glGetFramebufferAttachmentParameteriv(int target, int attachment, int pname, int[] params);
@Native void GL.glGenerateMipmap(int target);
@Native void GL.glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, int mask, int filter);
@Native void GL.glRenderbufferStorageMultisample(int target, int samples, int internalformat, int width, int height);
@Native void GL.glFramebufferTextureLayer(int target, int attachment, int texture, int level, int layer);
@Native void GL.glBindBufferRangeEXT(int target, int index, int buffer, int offset, intptr size);
@Native void GL.glBindBufferOffsetEXT(int target, int index, int buffer, int offset);
@Native void GL.glBindBufferBaseEXT(int target, int index, int buffer);
@Native void GL.glBeginTransformFeedbackEXT(int primitiveMode);
@Native void GL.glEndTransformFeedbackEXT();
@Native void GL.glTransformFeedbackVaryingsEXT(int program, int count, String varyings, int bufferMode);
@Native void GL.glGetTransformFeedbackVaryingEXT(int program, int index, int bufSize, int[] length, int[] size, int[] type, GLString name);
@Native void GL.glGetIntegerIndexedvEXT(int param, int index, int[] values);
@Native void GL.glGetBooleanIndexedvEXT(int param, int index, boolean[] values);
@Native void GL.glUniformBufferEXT(int program, int location, int buffer);
@Native int GL.glGetUniformBufferSizeEXT(int program, int location);
@Native int GL.glGetUniformOffsetEXT(int program, int location);
@Native void GL.glClearColorIiEXT(int r, int g, int b, int a );
@Native void GL.glClearColorIuiEXT(int r, int g, int b, int a );
@Native void GL.glTexParameterIivEXT(int target, int pname, int[] params );
@Native void GL.glTexParameterIuivEXT(int target, int pname, int[] params );
@Native void GL.glGetTexParameterIivEXT(int target, int pname, int[] params);
@Native void GL.glGetTexParameterIuivEXT(int target, int pname, int[] params);
@Native void GL.glVertexAttribI1iEXT(int index, int x);
@Native void GL.glVertexAttribI2iEXT(int index, int x, int y);
@Native void GL.glVertexAttribI3iEXT(int index, int x, int y, int z);
@Native void GL.glVertexAttribI4iEXT(int index, int x, int y, int z, int w);
@Native void GL.glVertexAttribI1uiEXT(int index, int x);
@Native void GL.glVertexAttribI2uiEXT(int index, int x, int y);
@Native void GL.glVertexAttribI3uiEXT(int index, int x, int y, int z);
@Native void GL.glVertexAttribI4uiEXT(int index, int x, int y, int z, int w);
@Native void GL.glVertexAttribI1ivEXT(int index, int[] v);
@Native void GL.glVertexAttribI2ivEXT(int index, int[] v);
@Native void GL.glVertexAttribI3ivEXT(int index, int[] v);
@Native void GL.glVertexAttribI4ivEXT(int index, int[] v);
@Native void GL.glVertexAttribI1uivEXT(int index, int[] v);
@Native void GL.glVertexAttribI2uivEXT(int index, int[] v);
@Native void GL.glVertexAttribI3uivEXT(int index, int[] v);
@Native void GL.glVertexAttribI4uivEXT(int index, int[] v);
@Native void GL.glVertexAttribI4bvEXT(int index, byte[] v);
@Native void GL.glVertexAttribI4svEXT(int index, int[] v);
@Native void GL.glVertexAttribI4ubvEXT(int index, byte[] v);
@Native void GL.glVertexAttribI4usvEXT(int index, int[] v);
@Native void GL.glVertexAttribIPointerEXT(int index, int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glGetVertexAttribIivEXT(int index, int pname, int[] params);
@Native void GL.glGetVertexAttribIuivEXT(int index, int pname, int[] params);
@Native void GL.glUniform1uiEXT(int location, int v0);
@Native void GL.glUniform2uiEXT(int location, int v0, int v1);
@Native void GL.glUniform3uiEXT(int location, int v0, int v1, int v2);
@Native void GL.glUniform4uiEXT(int location, int v0, int v1, int v2, int v3);
@Native void GL.glUniform1uivEXT(int location, int count, int[] value);
@Native void GL.glUniform2uivEXT(int location, int count, int[] value);
@Native void GL.glUniform3uivEXT(int location, int count, int[] value);
@Native void GL.glUniform4uivEXT(int location, int count, int[] value);
@Native void GL.glGetUniformuivEXT(int program, int location, int[] params);
@Native void GL.glBindFragDataLocationEXT(int program, int colorNumber, GLString name);
@Native int GL.glGetFragDataLocationEXT(int program, GLString name);
@Native void GL.glColorMaskIndexedEXT(int index, boolean r, boolean g, boolean b, boolean a);
@Native void GL.glEnableIndexedEXT(int target, int index);
@Native void GL.glDisableIndexedEXT(int target, int index);
@Native boolean GL.glIsEnabledIndexedEXT(int target, int index);
@Native void GL.glProvokingVertexEXT(int mode);
@Native void GL.glProvokingVertex(int mode);
@Native void GL.glGetQueryObjecti64vEXT(int id, int pname, int64EXT* params);
@Native void GL.glGetQueryObjectui64vEXT(int id, int pname, int64EXT* params);
@Native void GL.glTextureRangeAPPLE(int target, int length, GLVoidPtr pointer);
@Native void GL.glGetTexParameterPointervAPPLE(int target, int pname, GLVoidPtr[] params);
@Native void GL.glVertexArrayRangeAPPLE(int length, GLVoidPtr pointer);
@Native void GL.glFlushVertexArrayRangeAPPLE(int length, GLVoidPtr pointer);
@Native void GL.glVertexArrayParameteriAPPLE(int pname, int param);
@Native void GL.glBindVertexArrayAPPLE(int id);
@Native void GL.glDeleteVertexArraysAPPLE(int n, int[] ids);
@Native void GL.glGenVertexArraysAPPLE(int n, int[] ids);
@Native boolean GL.glIsVertexArrayAPPLE(int id);
@Native void GL.glGenFencesAPPLE(int n, int[] fences);
@Native void GL.glDeleteFencesAPPLE(int n, int[] fences);
@Native void GL.glSetFenceAPPLE(int fence);
@Native boolean GL.glIsFenceAPPLE(int fence);
@Native boolean GL.glTestFenceAPPLE(int fence);
@Native void GL.glFinishFenceAPPLE(int fence);
@Native boolean GL.glTestObjectAPPLE(int object, int name);
@Native void GL.glFinishObjectAPPLE(int object, int name);
@Native void GL.glElementPointerAPPLE(int type, GLVoidPtr pointer);
@Native void GL.glDrawElementArrayAPPLE(int mode, int first, int count);
@Native void GL.glDrawRangeElementArrayAPPLE(int mode, int start, int end, int first, int count);
@Native void GL.glMultiDrawElementArrayAPPLE(int mode, int[] first, int[] count, int primcount);
@Native void GL.glMultiDrawRangeElementArrayAPPLE(int mode, int start, int end, int[] first, int[] count, int primcount);
@Native void GL.glFlushRenderAPPLE();
@Native void GL.glFinishRenderAPPLE();
@Native void GL.glSwapAPPLE();
@Native void GL.glEnableVertexAttribAPPLE(int index, int pname);
@Native void GL.glDisableVertexAttribAPPLE(int index, int pname);
@Native boolean GL.glIsVertexAttribEnabledAPPLE(int index, int pname);
@Native void GL.glMapVertexAttrib1dAPPLE(int index, int size, double u1, double u2, int stride, int order, float[] points);
@Native void GL.glMapVertexAttrib1fAPPLE(int index, int size, double u1, double u2, int stride, int order, float[] points);
@Native void GL.glMapVertexAttrib2dAPPLE(int index, int size, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, float[] points);
@Native void GL.glMapVertexAttrib2fAPPLE(int index, int size, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, float[] points);
@Native void GL.glBufferParameteriAPPLE(int target, int pname, int param);
@Native void GL.glFlushMappedBufferRangeAPPLE(int target, int offset, intptr size);
@Native int GL.glObjectPurgeableAPPLE(int objectType, int name, int option);
@Native int GL.glObjectUnpurgeableAPPLE(int objectType, int name, int option);
@Native void GL.glGetObjectParameterivAPPLE(int objectType, int name, int pname, int[] params);
@Native void GL.glPointSizePointerAPPLE(int type, int stride, GLVoidPtr pointer);
@Native void GL.glVertexPointSizefAPPLE(double size);
@Native void GL.glPNTrianglesiATI(int pname, int param);
@Native void GL.glPNTrianglesfATI(int pname, double param);
@Native void GL.glBlendEquationSeparateATI(int equationRGB, int equationAlpha);
@Native void GL.glStencilOpSeparateATI(int face, int sfail, int dpfail, int dppass);
@Native void GL.glStencilFuncSeparateATI(int frontfunc, int backfunc, int ref, int mask);
@Native void GL.glPNTrianglesiATIX(int pname, int param);
@Native void GL.glPNTrianglesfATIX(int pname, double param);
@Native void GL.glPointParameteriNV(int pname, int param);
@Native void GL.glPointParameterivNV(int pname, int[] params);
@Native void GL.glBeginConditionalRenderNV(int id, int mode);
@Native void GL.glEndConditionalRenderNV();
@Native void GL.glAccum(int op, double value);
@Native void GL.glAlphaFunc(int func, double ref);
@Native boolean GL.glAreTexturesResident(int n, int[] textures, boolean[] residences);
@Native void GL.glArrayElement(int i);
@Native void GL.glBegin(int mode);
@Native void GL.glBindTexture(int target, int texture);
@Native void GL.glBitmap(int width, int height, double xorig, double yorig, double xmove, double ymove, byte[] bitmap);
@Native void GL.glBlendColor(double red, double green, double blue, double alpha);
@Native void GL.glBlendEquation(int mode);
@Native void GL.glBlendEquationSeparate(int modeRGB, int modeAlpha);
@Native void GL.glBlendFunc(int sfactor, int dfactor);
@Native void GL.glCallList(int list);
@Native void GL.glCallLists(int n, int type, GLVoidPtr lists);
@Native void GL.glClear(int mask);
@Native void GL.glClearAccum(double red, double green, double blue, double alpha);
@Native void GL.glClearColor(double red, double green, double blue, double alpha);
@Native void GL.glClearDepth(GLclampd depth);
@Native void GL.glClearIndex(double c);
@Native void GL.glClearStencil(int s);
@Native void GL.glClipPlane(int plane, float[] equation);
@Native void GL.glColor3b(int red, int green, int blue);
@Native void GL.glColor3bv(byte[] v);
@Native void GL.glColor3d(double red, double green, double blue);
@Native void GL.glColor3dv(float[] v);
@Native void GL.glColor3f(double red, double green, double blue);
@Native void GL.glColor3fv(float[] v);
@Native void GL.glColor3i(int red, int green, int blue);
@Native void GL.glColor3iv(int[] v);
@Native void GL.glColor3s(int red, int green, int blue);
@Native void GL.glColor3sv(int[] v);
@Native void GL.glColor3ub(int red, int green, int blue);
@Native void GL.glColor3ubv(byte[] v);
@Native void GL.glColor3ui(int red, int green, int blue);
@Native void GL.glColor3uiv(int[] v);
@Native void GL.glColor3us(int red, int green, int blue);
@Native void GL.glColor3usv(int[] v);
@Native void GL.glColor4b(int red, int green, int blue, int alpha);
@Native void GL.glColor4bv(byte[] v);
@Native void GL.glColor4d(double red, double green, double blue, double alpha);
@Native void GL.glColor4dv(float[] v);
@Native void GL.glColor4f(double red, double green, double blue, double alpha);
@Native void GL.glColor4fv(float[] v);
@Native void GL.glColor4i(int red, int green, int blue, int alpha);
@Native void GL.glColor4iv(int[] v);
@Native void GL.glColor4s(int red, int green, int blue, int alpha);
@Native void GL.glColor4sv(int[] v);
@Native void GL.glColor4ub(int red, int green, int blue, int alpha);
@Native void GL.glColor4ubv(byte[] v);
@Native void GL.glColor4ui(int red, int green, int blue, int alpha);
@Native void GL.glColor4uiv(int[] v);
@Native void GL.glColor4us(int red, int green, int blue, int alpha);
@Native void GL.glColor4usv(int[] v);
@Native void GL.glColorMask(boolean red, boolean green, boolean blue, boolean alpha);
@Native void GL.glColorMaterial(int face, int mode);
@Native void GL.glColorPointer(int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glColorSubTable(int target, int start, int count, int format_, int type, GLVoidPtr data);
@Native void GL.glColorTable(int target, int internalformat, int width, int format_, int type, GLVoidPtr table);
@Native void GL.glColorTableParameterfv(int target, int pname, float[] params);
@Native void GL.glColorTableParameteriv(int target, int pname, int[] params);
@Native void GL.glConvolutionFilter1D(int target, int internalformat, int width, int format_, int type, GLVoidPtr image);
@Native void GL.glConvolutionFilter2D(int target, int internalformat, int width, int height, int format_, int type, GLVoidPtr image);
@Native void GL.glConvolutionParameterf(int target, int pname, double params);
@Native void GL.glConvolutionParameterfv(int target, int pname, float[] params);
@Native void GL.glConvolutionParameteri(int target, int pname, int params);
@Native void GL.glConvolutionParameteriv(int target, int pname, int[] params);
@Native void GL.glCopyColorSubTable(int target, int start, int x, int y, int width);
@Native void GL.glCopyColorTable(int target, int internalformat, int x, int y, int width);
@Native void GL.glCopyConvolutionFilter1D(int target, int internalformat, int x, int y, int width);
@Native void GL.glCopyConvolutionFilter2D(int target, int internalformat, int x, int y, int width, int height);
@Native void GL.glCopyPixels(int x, int y, int width, int height, int type);
@Native void GL.glCopyTexImage1D(int target, int level, int internalformat, int x, int y, int width, int border);
@Native void GL.glCopyTexImage2D(int target, int level, int internalformat, int x, int y, int width, int height, int border);
@Native void GL.glCopyTexSubImage1D(int target, int level, int xoffset, int x, int y, int width);
@Native void GL.glCopyTexSubImage2D(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
@Native void GL.glCopyTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
@Native void GL.glCullFace(int mode);
@Native void GL.glDeleteLists(int list, int range);
@Native void GL.glDeleteTextures(int n, int[] textures);
@Native void GL.glDepthFunc(int func);
@Native void GL.glDepthMask(boolean flag);
@Native void GL.glDepthRange(GLclampd zNear, GLclampd zFar);
@Native void GL.glDisable(int cap);
@Native void GL.glDisableClientState(int array);
@Native void GL.glDrawArrays(int mode, int first, int count);
@Native void GL.glDrawBuffer(int mode);
@Native void GL.glDrawElements(int mode, int count, int type, GLVoidPtr indices);
@Native void GL.glDrawPixels(int width, int height, int format_, int type, GLVoidPtr pixels);
@Native void GL.glDrawRangeElements(int mode, int start, int end, int count, int type, GLVoidPtr indices);
@Native void GL.glEdgeFlag(boolean flag);
@Native void GL.glEdgeFlagPointer(int stride, GLVoidPtr pointer);
@Native void GL.glEdgeFlagv(boolean[] flag);
@Native void GL.glEnable(int cap);
@Native void GL.glEnableClientState(int array);
@Native void GL.glEnd();
@Native void GL.glEndList();
@Native void GL.glEvalCoord1d(double u);
@Native void GL.glEvalCoord1dv(float[] u);
@Native void GL.glEvalCoord1f(double u);
@Native void GL.glEvalCoord1fv(float[] u);
@Native void GL.glEvalCoord2d(double u, double v);
@Native void GL.glEvalCoord2dv(float[] u);
@Native void GL.glEvalCoord2f(double u, double v);
@Native void GL.glEvalCoord2fv(float[] u);
@Native void GL.glEvalMesh1(int mode, int i1, int i2);
@Native void GL.glEvalMesh2(int mode, int i1, int i2, int j1, int j2);
@Native void GL.glEvalPoint1(int i);
@Native void GL.glEvalPoint2(int i, int j);
@Native void GL.glFeedbackBuffer(int size, int type, float[] buffer);
@Native void GL.glFinish();
@Native void GL.glFlush();
@Native void GL.glFogf(int pname, double param);
@Native void GL.glFogfv(int pname, float[] params);
@Native void GL.glFogi(int pname, int param);
@Native void GL.glFogiv(int pname, int[] params);
@Native void GL.glFrontFace(int mode);
@Native void GL.glFrustum(double left, double right, double bottom, double top, double zNear, double zFar);
@Native int GL.glGenLists(int range);
@Native void GL.glGenTextures(int n, int[] textures);
@Native void GL.glGetBooleanv(int pname, boolean[] params);
@Native void GL.glGetClipPlane(int plane, float[] equation);
@Native void GL.glGetColorTable(int target, int format_, int type, GLVoidPtr table);
@Native void GL.glGetColorTableParameterfv(int target, int pname, float[] params);
@Native void GL.glGetColorTableParameteriv(int target, int pname, int[] params);
@Native void GL.glGetConvolutionFilter(int target, int format_, int type, GLVoidPtr image);
@Native void GL.glGetConvolutionParameterfv(int target, int pname, float[] params);
@Native void GL.glGetConvolutionParameteriv(int target, int pname, int[] params);
@Native void GL.glGetDoublev(int pname, float[] params);
@Native int GL.glGetError();
@Native void GL.glGetFloatv(int pname, float[] params);
@Native void GL.glGetHistogram(int target, boolean reset, int format_, int type, GLVoidPtr values);
@Native void GL.glGetHistogramParameterfv(int target, int pname, float[] params);
@Native void GL.glGetHistogramParameteriv(int target, int pname, int[] params);
@Native void GL.glGetIntegerv(int pname, int[] params);
@Native void GL.glGetLightfv(int light, int pname, float[] params);
@Native void GL.glGetLightiv(int light, int pname, int[] params);
@Native void GL.glGetMapdv(int target, int query, float[] v);
@Native void GL.glGetMapfv(int target, int query, float[] v);
@Native void GL.glGetMapiv(int target, int query, int[] v);
@Native void GL.glGetMaterialfv(int face, int pname, float[] params);
@Native void GL.glGetMaterialiv(int face, int pname, int[] params);
@Native void GL.glGetMinmax(int target, boolean reset, int format_, int type, GLVoidPtr values);
@Native void GL.glGetMinmaxParameterfv(int target, int pname, float[] params);
@Native void GL.glGetMinmaxParameteriv(int target, int pname, int[] params);
@Native void GL.glGetPixelMapfv(int map, float[] values);
@Native void GL.glGetPixelMapuiv(int map, int[] values);
@Native void GL.glGetPixelMapusv(int map, int[] values);
@Native void GL.glGetPointerv(int pname, GLVoidPtr[] params);
@Native void GL.glGetPolygonStipple(byte[] mask);
@Native void GL.glGetSeparableFilter(int target, int format_, int type, GLVoidPtr row, GLVoidPtr column, GLVoidPtr span);
@Native byte[] GL.glGetString(int name);
@Native void GL.glGetTexEnvfv(int target, int pname, float[] params);
@Native void GL.glGetTexEnviv(int target, int pname, int[] params);
@Native void GL.glGetTexGendv(int coord, int pname, float[] params);
@Native void GL.glGetTexGenfv(int coord, int pname, float[] params);
@Native void GL.glGetTexGeniv(int coord, int pname, int[] params);
@Native void GL.glGetTexImage(int target, int level, int format_, int type, GLVoidPtr pixels);
@Native void GL.glGetTexLevelParameterfv(int target, int level, int pname, float[] params);
@Native void GL.glGetTexLevelParameteriv(int target, int level, int pname, int[] params);
@Native void GL.glGetTexParameterfv(int target, int pname, float[] params);
@Native void GL.glGetTexParameteriv(int target, int pname, int[] params);
@Native void GL.glHint(int target, int mode);
@Native void GL.glHistogram(int target, int width, int internalformat, boolean sink);
@Native void GL.glIndexMask(int mask);
@Native void GL.glIndexPointer(int type, int stride, GLVoidPtr pointer);
@Native void GL.glIndexd(double c);
@Native void GL.glIndexdv(float[] c);
@Native void GL.glIndexf(double c);
@Native void GL.glIndexfv(float[] c);
@Native void GL.glIndexi(int c);
@Native void GL.glIndexiv(int[] c);
@Native void GL.glIndexs(int c);
@Native void GL.glIndexsv(int[] c);
@Native void GL.glIndexub(int c);
@Native void GL.glIndexubv(byte[] c);
@Native void GL.glInitNames();
@Native void GL.glInterleavedArrays(int format_, int stride, GLVoidPtr pointer);
@Native boolean GL.glIsEnabled(int cap);
@Native boolean GL.glIsList(int list);
@Native boolean GL.glIsTexture(int texture);
@Native void GL.glLightModelf(int pname, double param);
@Native void GL.glLightModelfv(int pname, float[] params);
@Native void GL.glLightModeli(int pname, int param);
@Native void GL.glLightModeliv(int pname, int[] params);
@Native void GL.glLightf(int light, int pname, double param);
@Native void GL.glLightfv(int light, int pname, float[] params);
@Native void GL.glLighti(int light, int pname, int param);
@Native void GL.glLightiv(int light, int pname, int[] params);
@Native void GL.glLineStipple(int factor, int pattern);
@Native void GL.glLineWidth(double width);
@Native void GL.glListBase(int base);
@Native void GL.glLoadIdentity();
@Native void GL.glLoadMatrixd(float[] m);
@Native void GL.glLoadMatrixf(float[] m);
@Native void GL.glLoadName(int name);
@Native void GL.glLogicOp(int opcode);
@Native void GL.glMap1d(int target, double u1, double u2, int stride, int order, float[] points);
@Native void GL.glMap1f(int target, double u1, double u2, int stride, int order, float[] points);
@Native void GL.glMap2d(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, float[] points);
@Native void GL.glMap2f(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, float[] points);
@Native void GL.glMapGrid1d(int un, double u1, double u2);
@Native void GL.glMapGrid1f(int un, double u1, double u2);
@Native void GL.glMapGrid2d(int un, double u1, double u2, int vn, double v1, double v2);
@Native void GL.glMapGrid2f(int un, double u1, double u2, int vn, double v1, double v2);
@Native void GL.glMaterialf(int face, int pname, double param);
@Native void GL.glMaterialfv(int face, int pname, float[] params);
@Native void GL.glMateriali(int face, int pname, int param);
@Native void GL.glMaterialiv(int face, int pname, int[] params);
@Native void GL.glMatrixMode(int mode);
@Native void GL.glMinmax(int target, int internalformat, boolean sink);
@Native void GL.glMultMatrixd(float[] m);
@Native void GL.glMultMatrixf(float[] m);
@Native void GL.glNewList(int list, int mode);
@Native void GL.glNormal3b(int nx, int ny, int nz);
@Native void GL.glNormal3bv(byte[] v);
@Native void GL.glNormal3d(double nx, double ny, double nz);
@Native void GL.glNormal3dv(float[] v);
@Native void GL.glNormal3f(double nx, double ny, double nz);
@Native void GL.glNormal3fv(float[] v);
@Native void GL.glNormal3i(int nx, int ny, int nz);
@Native void GL.glNormal3iv(int[] v);
@Native void GL.glNormal3s(int nx, int ny, int nz);
@Native void GL.glNormal3sv(int[] v);
@Native void GL.glNormalPointer(int type, int stride, GLVoidPtr pointer);
@Native void GL.glOrtho(double left, double right, double bottom, double top, double zNear, double zFar);
@Native void GL.glPassThrough(double token);
@Native void GL.glPixelMapfv(int map, int mapsize, float[] values);
@Native void GL.glPixelMapuiv(int map, int mapsize, int[] values);
@Native void GL.glPixelMapusv(int map, int mapsize, int[] values);
@Native void GL.glPixelStoref(int pname, double param);
@Native void GL.glPixelStorei(int pname, int param);
@Native void GL.glPixelTransferf(int pname, double param);
@Native void GL.glPixelTransferi(int pname, int param);
@Native void GL.glPixelZoom(double xfactor, double yfactor);
@Native void GL.glPointSize(double size);
@Native void GL.glPolygonMode(int face, int mode);
@Native void GL.glPolygonOffset(double factor, double units);
@Native void GL.glPolygonStipple(byte[] mask);
@Native void GL.glPopAttrib();
@Native void GL.glPopClientAttrib();
@Native void GL.glPopMatrix();
@Native void GL.glPopName();
@Native void GL.glPrioritizeTextures(int n, int[] textures, float[] priorities);
@Native void GL.glPushAttrib(int mask);
@Native void GL.glPushClientAttrib(int mask);
@Native void GL.glPushMatrix();
@Native void GL.glPushName(int name);
@Native void GL.glRasterPos2d(double x, double y);
@Native void GL.glRasterPos2dv(float[] v);
@Native void GL.glRasterPos2f(double x, double y);
@Native void GL.glRasterPos2fv(float[] v);
@Native void GL.glRasterPos2i(int x, int y);
@Native void GL.glRasterPos2iv(int[] v);
@Native void GL.glRasterPos2s(int x, int y);
@Native void GL.glRasterPos2sv(int[] v);
@Native void GL.glRasterPos3d(double x, double y, double z);
@Native void GL.glRasterPos3dv(float[] v);
@Native void GL.glRasterPos3f(double x, double y, double z);
@Native void GL.glRasterPos3fv(float[] v);
@Native void GL.glRasterPos3i(int x, int y, int z);
@Native void GL.glRasterPos3iv(int[] v);
@Native void GL.glRasterPos3s(int x, int y, int z);
@Native void GL.glRasterPos3sv(int[] v);
@Native void GL.glRasterPos4d(double x, double y, double z, double w);
@Native void GL.glRasterPos4dv(float[] v);
@Native void GL.glRasterPos4f(double x, double y, double z, double w);
@Native void GL.glRasterPos4fv(float[] v);
@Native void GL.glRasterPos4i(int x, int y, int z, int w);
@Native void GL.glRasterPos4iv(int[] v);
@Native void GL.glRasterPos4s(int x, int y, int z, int w);
@Native void GL.glRasterPos4sv(int[] v);
@Native void GL.glReadBuffer(int mode);
@Native void GL.glReadPixels(int x, int y, int width, int height, int format_, int type, GLVoidPtr pixels);
@Native void GL.glRectd(double x1, double y1, double x2, double y2);
@Native void GL.glRectdv(float[] v1, float[] v2);
@Native void GL.glRectf(double x1, double y1, double x2, double y2);
@Native void GL.glRectfv(float[] v1, float[] v2);
@Native void GL.glRecti(int x1, int y1, int x2, int y2);
@Native void GL.glRectiv(int[] v1, int[] v2);
@Native void GL.glRects(int x1, int y1, int x2, int y2);
@Native void GL.glRectsv(int[] v1, int[] v2);
@Native int GL.glRenderMode(int mode);
@Native void GL.glResetHistogram(int target);
@Native void GL.glResetMinmax(int target);
@Native void GL.glRotated(double angle, double x, double y, double z);
@Native void GL.glRotatef(double angle, double x, double y, double z);
@Native void GL.glScaled(double x, double y, double z);
@Native void GL.glScalef(double x, double y, double z);
@Native void GL.glScissor(int x, int y, int width, int height);
@Native void GL.glSelectBuffer(int size, int[] buffer);
@Native void GL.glSeparableFilter2D(int target, int internalformat, int width, int height, int format_, int type, GLVoidPtr row, GLVoidPtr column);
@Native void GL.glShadeModel(int mode);
@Native void GL.glStencilFunc(int func, int ref, int mask);
@Native void GL.glStencilMask(int mask);
@Native void GL.glStencilOp(int fail, int zfail, int zpass);
@Native void GL.glTexCoord1d(double s);
@Native void GL.glTexCoord1dv(float[] v);
@Native void GL.glTexCoord1f(double s);
@Native void GL.glTexCoord1fv(float[] v);
@Native void GL.glTexCoord1i(int s);
@Native void GL.glTexCoord1iv(int[] v);
@Native void GL.glTexCoord1s(int s);
@Native void GL.glTexCoord1sv(int[] v);
@Native void GL.glTexCoord2d(double s, double t);
@Native void GL.glTexCoord2dv(float[] v);
@Native void GL.glTexCoord2f(double s, double t);
@Native void GL.glTexCoord2fv(float[] v);
@Native void GL.glTexCoord2i(int s, int t);
@Native void GL.glTexCoord2iv(int[] v);
@Native void GL.glTexCoord2s(int s, int t);
@Native void GL.glTexCoord2sv(int[] v);
@Native void GL.glTexCoord3d(double s, double t, double r);
@Native void GL.glTexCoord3dv(float[] v);
@Native void GL.glTexCoord3f(double s, double t, double r);
@Native void GL.glTexCoord3fv(float[] v);
@Native void GL.glTexCoord3i(int s, int t, int r);
@Native void GL.glTexCoord3iv(int[] v);
@Native void GL.glTexCoord3s(int s, int t, int r);
@Native void GL.glTexCoord3sv(int[] v);
@Native void GL.glTexCoord4d(double s, double t, double r, double q);
@Native void GL.glTexCoord4dv(float[] v);
@Native void GL.glTexCoord4f(double s, double t, double r, double q);
@Native void GL.glTexCoord4fv(float[] v);
@Native void GL.glTexCoord4i(int s, int t, int r, int q);
@Native void GL.glTexCoord4iv(int[] v);
@Native void GL.glTexCoord4s(int s, int t, int r, int q);
@Native void GL.glTexCoord4sv(int[] v);
@Native void GL.glTexCoordPointer(int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glTexEnvf(int target, int pname, double param);
@Native void GL.glTexEnvfv(int target, int pname, float[] params);
@Native void GL.glTexEnvi(int target, int pname, int param);
@Native void GL.glTexEnviv(int target, int pname, int[] params);
@Native void GL.glTexGend(int coord, int pname, double param);
@Native void GL.glTexGendv(int coord, int pname, float[] params);
@Native void GL.glTexGenf(int coord, int pname, double param);
@Native void GL.glTexGenfv(int coord, int pname, float[] params);
@Native void GL.glTexGeni(int coord, int pname, int param);
@Native void GL.glTexGeniv(int coord, int pname, int[] params);
@Native void GL.glTexImage1D(int target, int level, int internalformat, int width, int border, int format_, int type, GLVoidPtr pixels);
@Native void GL.glTexImage2D(int target, int level, int internalformat, int width, int height, int border, int format_, int type, GLVoidPtr pixels);
@Native void GL.glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format_, int type, GLVoidPtr pixels);
@Native void GL.glTexParameterf(int target, int pname, double param);
@Native void GL.glTexParameterfv(int target, int pname, float[] params);
@Native void GL.glTexParameteri(int target, int pname, int param);
@Native void GL.glTexParameteriv(int target, int pname, int[] params);
@Native void GL.glTexSubImage1D(int target, int level, int xoffset, int width, int format_, int type, GLVoidPtr pixels);
@Native void GL.glTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format_, int type, GLVoidPtr pixels);
@Native void GL.glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format_, int type, GLVoidPtr pixels);
@Native void GL.glTranslated(double x, double y, double z);
@Native void GL.glTranslatef(double x, double y, double z);
@Native void GL.glVertex2d(double x, double y);
@Native void GL.glVertex2dv(float[] v);
@Native void GL.glVertex2f(double x, double y);
@Native void GL.glVertex2fv(float[] v);
@Native void GL.glVertex2i(int x, int y);
@Native void GL.glVertex2iv(int[] v);
@Native void GL.glVertex2s(int x, int y);
@Native void GL.glVertex2sv(int[] v);
@Native void GL.glVertex3d(double x, double y, double z);
@Native void GL.glVertex3dv(float[] v);
@Native void GL.glVertex3f(double x, double y, double z);
@Native void GL.glVertex3fv(float[] v);
@Native void GL.glVertex3i(int x, int y, int z);
@Native void GL.glVertex3iv(int[] v);
@Native void GL.glVertex3s(int x, int y, int z);
@Native void GL.glVertex3sv(int[] v);
@Native void GL.glVertex4d(double x, double y, double z, double w);
@Native void GL.glVertex4dv(float[] v);
@Native void GL.glVertex4f(double x, double y, double z, double w);
@Native void GL.glVertex4fv(float[] v);
@Native void GL.glVertex4i(int x, int y, int z, int w);
@Native void GL.glVertex4iv(int[] v);
@Native void GL.glVertex4s(int x, int y, int z, int w);
@Native void GL.glVertex4sv(int[] v);
@Native void GL.glVertexPointer(int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glViewport(int x, int y, int width, int height);
@Native void GL.glSampleCoverage(double value, boolean invert);
@Native void GL.glLoadTransposeMatrixf(float[] m);
@Native void GL.glLoadTransposeMatrixd(float[] m);
@Native void GL.glMultTransposeMatrixf(float[] m);
@Native void GL.glMultTransposeMatrixd(float[] m);
@Native void GL.glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexImage2D(int target, int level, int internalformat, int width, int height, int border, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexImage1D(int target, int level, int internalformat, int width, int border, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format_, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexSubImage2D(int target, int level, int xoffset, int yoffset, int width, int height, int format_, int imageSize, GLVoidPtr data);
@Native void GL.glCompressedTexSubImage1D(int target, int level, int xoffset, int width, int format_, int imageSize, GLVoidPtr data);
@Native void GL.glGetCompressedTexImage(int target, int lod, GLVoidPtr img);
@Native void GL.glActiveTexture(int texture);
@Native void GL.glClientActiveTexture(int texture);
@Native void GL.glMultiTexCoord1d(int target, double s);
@Native void GL.glMultiTexCoord1dv(int target, float[] v);
@Native void GL.glMultiTexCoord1f(int target, double s);
@Native void GL.glMultiTexCoord1fv(int target, float[] v);
@Native void GL.glMultiTexCoord1i(int target, int s);
@Native void GL.glMultiTexCoord1iv(int target, int[] v);
@Native void GL.glMultiTexCoord1s(int target, int s);
@Native void GL.glMultiTexCoord1sv(int target, int[] v);
@Native void GL.glMultiTexCoord2d(int target, double s, double t);
@Native void GL.glMultiTexCoord2dv(int target, float[] v);
@Native void GL.glMultiTexCoord2f(int target, double s, double t);
@Native void GL.glMultiTexCoord2fv(int target, float[] v);
@Native void GL.glMultiTexCoord2i(int target, int s, int t);
@Native void GL.glMultiTexCoord2iv(int target, int[] v);
@Native void GL.glMultiTexCoord2s(int target, int s, int t);
@Native void GL.glMultiTexCoord2sv(int target, int[] v);
@Native void GL.glMultiTexCoord3d(int target, double s, double t, double r);
@Native void GL.glMultiTexCoord3dv(int target, float[] v);
@Native void GL.glMultiTexCoord3f(int target, double s, double t, double r);
@Native void GL.glMultiTexCoord3fv(int target, float[] v);
@Native void GL.glMultiTexCoord3i(int target, int s, int t, int r);
@Native void GL.glMultiTexCoord3iv(int target, int[] v);
@Native void GL.glMultiTexCoord3s(int target, int s, int t, int r);
@Native void GL.glMultiTexCoord3sv(int target, int[] v);
@Native void GL.glMultiTexCoord4d(int target, double s, double t, double r, double q);
@Native void GL.glMultiTexCoord4dv(int target, float[] v);
@Native void GL.glMultiTexCoord4f(int target, double s, double t, double r, double q);
@Native void GL.glMultiTexCoord4fv(int target, float[] v);
@Native void GL.glMultiTexCoord4i(int target, int s, int t, int r, int q);
@Native void GL.glMultiTexCoord4iv(int target, int[] v);
@Native void GL.glMultiTexCoord4s(int target, int s, int t, int r, int q);
@Native void GL.glMultiTexCoord4sv(int target, int[] v);
@Native void GL.glFogCoordf(double coord);
@Native void GL.glFogCoordfv(float[] coord);
@Native void GL.glFogCoordd(double coord);
@Native void GL.glFogCoorddv(float[] coord);
@Native void GL.glFogCoordPointer(int type, int stride, GLVoidPtr pointer);
@Native void GL.glSecondaryColor3b(int red, int green, int blue);
@Native void GL.glSecondaryColor3bv(byte[] v);
@Native void GL.glSecondaryColor3d(double red, double green, double blue);
@Native void GL.glSecondaryColor3dv(float[] v);
@Native void GL.glSecondaryColor3f(double red, double green, double blue);
@Native void GL.glSecondaryColor3fv(float[] v);
@Native void GL.glSecondaryColor3i(int red, int green, int blue);
@Native void GL.glSecondaryColor3iv(int[] v);
@Native void GL.glSecondaryColor3s(int red, int green, int blue);
@Native void GL.glSecondaryColor3sv(int[] v);
@Native void GL.glSecondaryColor3ub(int red, int green, int blue);
@Native void GL.glSecondaryColor3ubv(byte[] v);
@Native void GL.glSecondaryColor3ui(int red, int green, int blue);
@Native void GL.glSecondaryColor3uiv(int[] v);
@Native void GL.glSecondaryColor3us(int red, int green, int blue);
@Native void GL.glSecondaryColor3usv(int[] v);
@Native void GL.glSecondaryColorPointer(int size, int type, int stride, GLVoidPtr pointer);
@Native void GL.glPointParameterf(int pname, double param);
@Native void GL.glPointParameterfv(int pname, float[] params);
@Native void GL.glPointParameteri(int pname, int param);
@Native void GL.glPointParameteriv(int pname, int[] params);
@Native void GL.glBlendFuncSeparate(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha);
@Native void GL.glMultiDrawArrays(int mode, int[] first, int[] count, int primcount);
@Native void GL.glMultiDrawElements(int mode, int[] count, int type, GLVoidPtr[] indices, int primcount);
@Native void GL.glWindowPos2d(double x, double y);
@Native void GL.glWindowPos2dv(float[] v);
@Native void GL.glWindowPos2f(double x, double y);
@Native void GL.glWindowPos2fv(float[] v);
@Native void GL.glWindowPos2i(int x, int y);
@Native void GL.glWindowPos2iv(int[] v);
@Native void GL.glWindowPos2s(int x, int y);
@Native void GL.glWindowPos2sv(int[] v);
@Native void GL.glWindowPos3d(double x, double y, double z);
@Native void GL.glWindowPos3dv(float[] v);
@Native void GL.glWindowPos3f(double x, double y, double z);
@Native void GL.glWindowPos3fv(float[] v);
@Native void GL.glWindowPos3i(int x, int y, int z);
@Native void GL.glWindowPos3iv(int[] v);
@Native void GL.glWindowPos3s(int x, int y, int z);
@Native void GL.glWindowPos3sv(int[] v);
@Native void GL.glGenQueries(int n, int[] ids);
@Native void GL.glDeleteQueries(int n, int[] ids);
@Native boolean GL.glIsQuery(int id);
@Native void GL.glBeginQuery(int target, int id);
@Native void GL.glEndQuery(int target);
@Native void GL.glGetQueryiv(int target, int pname, int[] params);
@Native void GL.glGetQueryObjectiv(int id, int pname, int[] params);
@Native void GL.glGetQueryObjectuiv(int id, int pname, int[] params);
@Native void GL.glBindBuffer(int target, int buffer);
@Native void GL.glDeleteBuffers(int n, int[] buffers);
@Native void GL.glGenBuffers(int n, int[] buffers);
@Native boolean GL.glIsBuffer(int buffer);
@Native void GL.glBufferData(int target, intptr size, GLVoidPtr data, int usage);
@Native void GL.glBufferSubData(int target, int offset, intptr size, GLVoidPtr data);
@Native void GL.glGetBufferSubData(int target, int offset, intptr size, GLVoidPtr data);
@Native GLVoidPtr GL.glMapBuffer(int target, int access);
@Native boolean GL.glUnmapBuffer(int target);
@Native void GL.glGetBufferParameteriv(int target, int pname, int[] params);
@Native void GL.glGetBufferPointerv(int target, int pname, GLVoidPtr[] params);
@Native void GL.glDrawBuffers(int n, int[] bufs);
@Native void GL.glVertexAttrib1d(int index, double x);
@Native void GL.glVertexAttrib1dv(int index, float[] v);
@Native void GL.glVertexAttrib1f(int index, double x);
@Native void GL.glVertexAttrib1fv(int index, float[] v);
@Native void GL.glVertexAttrib1s(int index, int x);
@Native void GL.glVertexAttrib1sv(int index, int[] v);
@Native void GL.glVertexAttrib2d(int index, double x, double y);
@Native void GL.glVertexAttrib2dv(int index, float[] v);
@Native void GL.glVertexAttrib2f(int index, double x, double y);
@Native void GL.glVertexAttrib2fv(int index, float[] v);
@Native void GL.glVertexAttrib2s(int index, int x, int y);
@Native void GL.glVertexAttrib2sv(int index, int[] v);
@Native void GL.glVertexAttrib3d(int index, double x, double y, double z);
@Native void GL.glVertexAttrib3dv(int index, float[] v);
@Native void GL.glVertexAttrib3f(int index, double x, double y, double z);
@Native void GL.glVertexAttrib3fv(int index, float[] v);
@Native void GL.glVertexAttrib3s(int index, int x, int y, int z);
@Native void GL.glVertexAttrib3sv(int index, int[] v);
@Native void GL.glVertexAttrib4Nbv(int index, byte[] v);
@Native void GL.glVertexAttrib4Niv(int index, int[] v);
@Native void GL.glVertexAttrib4Nsv(int index, int[] v);
@Native void GL.glVertexAttrib4Nub(int index, int x, int y, int z, int w);
@Native void GL.glVertexAttrib4Nubv(int index, byte[] v);
@Native void GL.glVertexAttrib4Nuiv(int index, int[] v);
@Native void GL.glVertexAttrib4Nusv(int index, int[] v);
@Native void GL.glVertexAttrib4bv(int index, byte[] v);
@Native void GL.glVertexAttrib4d(int index, double x, double y, double z, double w);
@Native void GL.glVertexAttrib4dv(int index, float[] v);
@Native void GL.glVertexAttrib4f(int index, double x, double y, double z, double w);
@Native void GL.glVertexAttrib4fv(int index, float[] v);
@Native void GL.glVertexAttrib4iv(int index, int[] v);
@Native void GL.glVertexAttrib4s(int index, int x, int y, int z, int w);
@Native void GL.glVertexAttrib4sv(int index, int[] v);
@Native void GL.glVertexAttrib4ubv(int index, byte[] v);
@Native void GL.glVertexAttrib4uiv(int index, int[] v);
@Native void GL.glVertexAttrib4usv(int index, int[] v);
@Native void GL.glVertexAttribPointer(int index, int size, int type, boolean normalized, int stride, GLVoidPtr pointer);
@Native void GL.glEnableVertexAttribArray(int index);
@Native void GL.glDisableVertexAttribArray(int index);
@Native void GL.glGetVertexAttribdv(int index, int pname, float[] params);
@Native void GL.glGetVertexAttribfv(int index, int pname, float[] params);
@Native void GL.glGetVertexAttribiv(int index, int pname, int[] params);
@Native void GL.glGetVertexAttribPointerv(int index, int pname, GLVoidPtr[] pointer);
@Native void GL.glDeleteShader(int shader);
@Native void GL.glDetachShader(int program, int shader);
@Native int GL.glCreateShader(int type);
@Native void GL.glShaderSource(int shader, int count, String s, int[] length);
@Native void GL.glCompileShader(int shader);
@Native int GL.glCreateProgram();
@Native void GL.glAttachShader(int program, int shader);
@Native void GL.glLinkProgram(int program);
@Native void GL.glUseProgram(int program);
@Native void GL.glDeleteProgram(int program);
@Native void GL.glValidateProgram(int program);
@Native void GL.glUniform1f(int location, double v0);
@Native void GL.glUniform2f(int location, double v0, double v1);
@Native void GL.glUniform3f(int location, double v0, double v1, double v2);
@Native void GL.glUniform4f(int location, double v0, double v1, double v2, double v3);
@Native void GL.glUniform1i(int location, int v0);
@Native void GL.glUniform2i(int location, int v0, int v1);
@Native void GL.glUniform3i(int location, int v0, int v1, int v2);
@Native void GL.glUniform4i(int location, int v0, int v1, int v2, int v3);
@Native void GL.glUniform1fv(int location, int count, float[] value);
@Native void GL.glUniform2fv(int location, int count, float[] value);
@Native void GL.glUniform3fv(int location, int count, float[] value);
@Native void GL.glUniform4fv(int location, int count, float[] value);
@Native void GL.glUniform1iv(int location, int count, int[] value);
@Native void GL.glUniform2iv(int location, int count, int[] value);
@Native void GL.glUniform3iv(int location, int count, int[] value);
@Native void GL.glUniform4iv(int location, int count, int[] value);
@Native void GL.glUniformMatrix2fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix3fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix4fv(int location, int count, boolean transpose, float[] value);
@Native boolean GL.glIsShader(int shader);
@Native boolean GL.glIsProgram(int program);
@Native void GL.glGetShaderiv(int shader, int pname, int[] params);
@Native void GL.glGetProgramiv(int program, int pname, int[] params);
@Native void GL.glGetAttachedShaders(int program, int maxCount, int[] count, int[] shaders);
@Native void GL.glGetShaderInfoLog(int shader, int bufSize, int[] length, GLString infoLog);
@Native void GL.glGetProgramInfoLog(int program, int bufSize, int[] length, GLString infoLog);
@Native int GL.glGetUniformLocation(int program, GLString name);
@Native void GL.glGetActiveUniform(int program, int index, int bufSize, int[] length, int[] size, int[] type, GLString name);
@Native void GL.glGetUniformfv(int program, int location, float[] params);
@Native void GL.glGetUniformiv(int program, int location, int[] params);
@Native void GL.glGetShaderSource(int shader, int bufSize, int[] length, GLString source);
@Native void GL.glBindAttribLocation(int program, int index, GLString name);
@Native void GL.glGetActiveAttrib(int program, int index, int bufSize, int[] length, int[] size, int[] type, GLString name);
@Native int GL.glGetAttribLocation(int program, GLString name);
@Native void GL.glStencilFuncSeparate(int face, int func, int ref, int mask);
@Native void GL.glStencilOpSeparate(int face, int fail, int zfail, int zpass);
@Native void GL.glStencilMaskSeparate(int face, int mask);
@Native void GL.glUniformMatrix2x3fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix3x2fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix2x4fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix4x2fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix3x4fv(int location, int count, boolean transpose, float[] value);
@Native void GL.glUniformMatrix4x3fv(int location, int count, boolean transpose, float[] value);
@Native void GL.gluBeginCurve(GLUnurbs nurb);
@Native void GL.gluBeginPolygon(GLUtesselator tess);
@Native void GL.gluBeginSurface(GLUnurbs nurb);
@Native void GL.gluBeginTrim(GLUnurbs nurb);
@Native int GL.gluBuild1DMipmapLevels(int target, int internalFormat, int width, int format_, int type, int level, int base, int max, GLVoidPtr data);
@Native int GL.gluBuild1DMipmaps(int target, int internalFormat, int width, int format_, int type, GLVoidPtr data);
@Native int GL.gluBuild2DMipmapLevels(int target, int internalFormat, int width, int height, int format_, int type, int level, int base, int max, GLVoidPtr data);
@Native int GL.gluBuild2DMipmaps(int target, int internalFormat, int width, int height, int format_, int type, GLVoidPtr data);
@Native int GL.gluBuild3DMipmapLevels(int target, int internalFormat, int width, int height, int depth, int format_, int type, int level, int base, int max, GLVoidPtr data);
@Native int GL.gluBuild3DMipmaps(int target, int internalFormat, int width, int height, int depth, int format_, int type, GLVoidPtr data);
@Native boolean GL.gluCheckExtension(byte[] extName, byte[] extString);
@Native void GL.gluCylinder(GLUquadric quad, double base, double top, double height, int slices, int stacks);
@Native void GL.gluDeleteNurbsRenderer(GLUnurbs nurb);
@Native void GL.gluDeleteQuadric(GLUquadric quad);
@Native void GL.gluDeleteTess(GLUtesselator tess);
@Native void GL.gluDisk(GLUquadric quad, double inner, double outer, int slices, int loops);
@Native void GL.gluEndCurve(GLUnurbs nurb);
@Native void GL.gluEndPolygon(GLUtesselator tess);
@Native void GL.gluEndSurface(GLUnurbs nurb);
@Native void GL.gluEndTrim(GLUnurbs nurb);
@Native byte[] GL.gluErrorString(int error);
@Native void GL.gluGetNurbsProperty(GLUnurbs nurb, int property, float[] data);
@Native byte[] GL.gluGetString(int name);
@Native void GL.gluGetTessProperty(GLUtesselator tess, int which, float[] data);
@Native void GL.gluLoadSamplingMatrices(GLUnurbs nurb, float[] model, float[] perspective, int[] view);
@Native void GL.gluLookAt(double eyeX, double eyeY, double eyeZ, double centerX, double centerY, double centerZ, double upX, double upY, double upZ);
@Native GLUnurbs GL.gluNewNurbsRenderer();
@Native GLUquadric GL.gluNewQuadric();
@Native GLUtesselator GL.gluNewTess();
@Native void GL.gluNextContour(GLUtesselator tess, int type);
@Native void GL.gluNurbsCallbackData(GLUnurbs nurb, GLVoidPtr userData);
@Native void GL.gluNurbsCallbackDataEXT(GLUnurbs nurb, GLVoidPtr userData);
@Native void GL.gluNurbsCurve(GLUnurbs nurb, int knotCount, float[] knots, int stride, float[] control, int order, int type);
@Native void GL.gluNurbsProperty(GLUnurbs nurb, int property, double value);
@Native void GL.gluNurbsSurface(GLUnurbs nurb, int sKnotCount, float[] sKnots, int tKnotCount, float[] tKnots, int sStride, int tStride, float[] control, int sOrder, int tOrder, int type);
@Native void GL.gluOrtho2D(double left, double right, double bottom, double top);
@Native void GL.gluPartialDisk(GLUquadric quad, double inner, double outer, int slices, int loops, double start, double sweep);
@Native void GL.gluPerspective(double fovy, double aspect, double zNear, double zFar);
@Native void GL.gluPickMatrix(double x, double y, double delX, double delY, int[] viewport);
@Native int GL.gluProject(double objX, double objY, double objZ, float[] model, float[] proj, int[] view, float[] winX, float[] winY, float[] winZ);
@Native void GL.gluPwlCurve(GLUnurbs nurb, int count, float[] data, int stride, int type);
@Native void GL.gluQuadricDrawStyle(GLUquadric quad, int draw);
@Native void GL.gluQuadricNormals(GLUquadric quad, int normal);
@Native void GL.gluQuadricOrientation(GLUquadric quad, int orientation);
@Native void GL.gluQuadricTexture(GLUquadric quad, boolean texture);
@Native int GL.gluScaleImage(int format_, int wIn, int hIn, int typeIn, GLVoidPtr dataIn, int wOut, int hOut, int typeOut, GLVoidPtr dataOut);
@Native void GL.gluSphere(GLUquadric quad, double radius, int slices, int stacks);
@Native void GL.gluTessBeginContour(GLUtesselator tess);
@Native void GL.gluTessBeginPolygon(GLUtesselator tess, GLVoidPtr data);
@Native void GL.gluTessEndContour(GLUtesselator tess);
@Native void GL.gluTessEndPolygon(GLUtesselator tess);
@Native void GL.gluTessNormal(GLUtesselator tess, double valueX, double valueY, double valueZ);
@Native void GL.gluTessProperty(GLUtesselator tess, int which, double data);
@Native void GL.gluTessVertex(GLUtesselator tess, float[] location, GLVoidPtr data);
@Native int GL.gluUnProject(double winX, double winY, double winZ, float[] model, float[] proj, int[] view, float[] objX, float[] objY, float[] objZ);
@Native int GL.gluUnProject4(double winX, double winY, double winZ, double clipW, float[] model, float[] proj, int[] view, double nearPlane, double farPlane, float[] objX, float[] objY, float[] objZ, float[] objW);
@Native void GL.glutInit(int[] argcp, String[] argv);
@Native void GL.glutInitDisplayMode(int mode);
@Native void GL.glutInitDisplayString(String s);
@Native void GL.glutInitWindowPosition(int x, int y);
@Native void GL.glutInitWindowSize(int width, int height);
@Native void GL.glutMainLoop();
@Native int GL.glutCreateWindow(String title);
@Native int GL.glutCreateSubWindow(int win, int x, int y, int width, int height);
@Native void GL.glutDestroyWindow(int win);
@Native void GL.glutPostRedisplay();
@Native void GL.glutPostWindowRedisplay(int win);
@Native void GL.glutSwapBuffers();
@Native int GL.glutGetWindow();
@Native void GL.glutSetWindow(int win);
@Native void GL.glutSetWindowTitle(String title);
@Native void GL.glutSetIconTitle(String title);
@Native void GL.glutPositionWindow(int x, int y);
@Native void GL.glutReshapeWindow(int width, int height);
@Native void GL.glutPopWindow();
@Native void GL.glutPushWindow();
@Native void GL.glutIconifyWindow();
@Native void GL.glutShowWindow();
@Native void GL.glutHideWindow();
@Native void GL.glutFullScreen();
@Native void GL.glutSetCursor(int cursor);
@Native void GL.glutWarpPointer(int x, int y);
@Native void GL.glutCheckLoop();
@Native void GL.glutEstablishOverlay();
@Native void GL.glutRemoveOverlay();
@Native void GL.glutUseLayer(int layer);
@Native void GL.glutPostOverlayRedisplay();
@Native void GL.glutPostWindowOverlayRedisplay(int win);
@Native void GL.glutShowOverlay();
@Native void GL.glutHideOverlay();
@Native void GL.glutDestroyMenu(int menu);
@Native int GL.glutGetMenu();
@Native void GL.glutSetMenu(int menu);
@Native void GL.glutAddMenuEntry(String label, int value);
@Native void GL.glutAddSubMenu(String label, int submenu);
@Native void GL.glutChangeToMenuEntry(int item, String label, int value);
@Native void GL.glutChangeToSubMenu(int item, String label, int submenu);
@Native void GL.glutRemoveMenuItem(int item);
@Native void GL.glutAttachMenu(int button);
@Native void GL.glutDetachMenu(int button);
@Native void GL.glutSetColor(int x, double red, double green, double blue);
@Native double GL.glutGetColor(int ndx, int component);
@Native void GL.glutCopyColormap(int win);
@Native int GL.glutGet(int type);
@Native int GL.glutDeviceGet(int type);
@Native int GL.glutExtensionSupported(String name);
@Native int GL.glutGetModifiers();
@Native int GL.glutLayerGet(int type);
@Native GLVoidPtr GL.glutGetProcAddress(String procName);
@Native void GL.glutBitmapCharacter(GLVoidPtr font, int character);
@Native int GL.glutBitmapWidth(GLVoidPtr font, int character);
@Native void GL.glutStrokeCharacter(GLVoidPtr font, int character);
@Native int GL.glutStrokeWidth(GLVoidPtr font, int character);
@Native int GL.glutBitmapLength(GLVoidPtr font, String s);
@Native int GL.glutStrokeLength(GLVoidPtr font, String s);
@Native void GL.glutWireSphere(double radius, int slices, int stacks);
@Native void GL.glutSolidSphere(double radius, int slices, int stacks);
@Native void GL.glutWireCone(double base, double height, int slices, int stacks);
@Native void GL.glutSolidCone(double base, double height, int slices, int stacks);
@Native void GL.glutWireCube(double size);
@Native void GL.glutSolidCube(double size);
@Native void GL.glutWireTorus(double innerRadius, double outerRadius, int sides, int rings);
@Native void GL.glutSolidTorus(double innerRadius, double outerRadius, int sides, int rings);
@Native void GL.glutWireDodecahedron();
@Native void GL.glutSolidDodecahedron();
@Native void GL.glutWireTeapot(double size);
@Native void GL.glutSolidTeapot(double size);
@Native void GL.glutWireOctahedron();
@Native void GL.glutSolidOctahedron();
@Native void GL.glutWireTetrahedron();
@Native void GL.glutSolidTetrahedron();
@Native void GL.glutWireIcosahedron();
@Native void GL.glutSolidIcosahedron();
@Native int GL.glutVideoResizeGet(int param);
@Native void GL.glutSetupVideoResizing();
@Native void GL.glutStopVideoResizing();
@Native void GL.glutVideoResize(int x, int y, int width, int height);
@Native void GL.glutVideoPan(int x, int y, int width, int height);
@Native void GL.glutReportErrors();
@Native void GL.glutIgnoreKeyRepeat(int ignore);
@Native void GL.glutSetKeyRepeat(int repeatMode);
@Native void GL.glutForceJoystickFunc();
@Native void GL.glutGameModeString(String s);
@Native int GL.glutEnterGameMode();
@Native void GL.glutLeaveGameMode();
@Native int GL.glutGameModeGet(int mode);


Index: src/lang/script.c
===================================================================
--- src/lang/script.c	(revision 639)
+++ src/lang/script.c	(working copy)
@@ -997,6 +997,8 @@
 	return linenum;
 }
 
+#include "mpi.h"
+
 knh_status_t knh_InputStream_load(CTX ctx, knh_InputStream_t *in)
 {
 	BEGIN_LOCAL(ctx, lsfp, 3);
@@ -1009,21 +1011,28 @@
 		NOTE_OK("script_start");
 	}
 	do {
-		int linenum = 0;
+		int linenum = 0, flag_continue = 0;
 		knh_Bytes_clear(ba, 0);
-		if(!knh_InputStream_isClosed(ctx, in)) {
-			status = K_CONTINUE;
-			linenum = readchunk(ctx, in, ba);
+		if (in != NULL) {
+			if(!knh_InputStream_isClosed(ctx, in)) {
+				flag_continue = 1;
+				linenum = readchunk(ctx, in, ba);
+			}
 		}
+		MPI_Bcast(&flag_continue, 1, MPI_INT, 0, MPI_COMM_WORLD);
+		if (flag_continue == 1) status = K_CONTINUE;
+		MPI_Bcast(&linenum, 1, MPI_INT, 0, MPI_COMM_WORLD);
+		MPI_Bcast(&(ba->bu.len), 1, MPI_INT, 0, MPI_COMM_WORLD);
+		MPI_Bcast(ba->bu.ubuf, ba->bu.len, MPI_CHAR, 0, MPI_COMM_WORLD);
 		if(!bytes_isempty(ba->bu)) {
-			knh_uri_t uri = ULINE_uri(in->uline);
+			knh_uri_t uri;
+			if (in != NULL) {
+				uri = ULINE_uri(in->uline);
+			}
+			MPI_Bcast(&uri, 1, MPI_INT, 0, MPI_COMM_WORLD);
 			knh_InputStream_setpos(ctx, bin, 0, BA_size(ba));
 			bin->uline = linenum;
 			ULINE_setURI(bin->uline, uri);
-			DBG_(if(knh_isVerboseLang()) {
-				fprintf(stderr, "\n>>>--------------------------------\n");
-				fprintf(stderr, "%s<<<--------------------------------\n", knh_Bytes_ensureZero(ctx, ba));
-			});
 			status  = (knh_status_t)knh_beval(ctx, bin);
 		}
 	} while(BA_size(ba) > 0 && status == K_CONTINUE);
@@ -1075,10 +1084,12 @@
 		status = knh_InputStream_load(ctx, in);
 	}
 	else {
+		int mpi_rank;
+		MPI_Comm_rank(MPI_COMM_WORLD, &mpi_rank);
 		CWB_t cwbbuf, *cwb = CWB_open(ctx, &cwbbuf);
 		knh_buff_addStartPath(ctx, cwb->ba, cwb->pos, B(path));
-		FILE *fp = fopen(CWB_totext(ctx, cwb), "r");
-		if(fp != NULL) {
+		FILE *fp = (mpi_rank == 0) ? fopen(CWB_totext(ctx, cwb), "r") : NULL;
+		if(mpi_rank > 0 || fp != NULL) {
 			knh_uri_t uri = knh_getURI(ctx, CWB_tobytes(cwb));
 			KNH_SETv(ctx, ns->path, new_Path(ctx, knh_buff_newRealPathString(ctx, cwb->ba, cwb->pos)));
 			knh_InputStream_t *in = new_InputStreamDPI(ctx, (knh_io_t)fp, NULL, ns->path);

input_urn
/home/onoda/Documents/qt-everywhere-opensource-src-4.7.4/doc/html/qsettings.html

output_urn
QSettings

inherits

public_types
 enum Format { NativeFormat, IniFormat, InvalidFormat }
 typedef ReadFunc
 enum Scope { UserScope, SystemScope }
 typedef SettingsMap
 enum Status { NoError, AccessError, FormatError }
 typedef WriteFunc

properties

public_functions
QSettings ( const QString & organization, const QString & application = QString(), QObject * parent = 0 )
QSettings ( Scope scope, const QString & organization, const QString & application = QString(), QObject * parent = 0 )
QSettings ( Format format, Scope scope, const QString & organization, const QString & application = QString(), QObject * parent = 0 )
QSettings ( const QString & fileName, Format format, QObject * parent = 0 )
QSettings ( QObject * parent = 0 )
~QSettings ()
 QStringList allKeys () const
 QString applicationName () const
 void beginGroup ( const QString & prefix )
 int beginReadArray ( const QString & prefix )
 void beginWriteArray ( const QString & prefix, int size = -1 )
 QStringList childGroups () const
 QStringList childKeys () const
 void clear ()
 bool contains ( const QString & key ) const
 void endArray ()
 void endGroup ()
 bool fallbacksEnabled () const
 QString fileName () const
 Format format () const
 QString group () const
 QTextCodec * iniCodec () const
 bool isWritable () const
 QString organizationName () const
 void remove ( const QString & key )
 Scope scope () const
 void setArrayIndex ( int i )
 void setFallbacksEnabled ( bool b )
 void setIniCodec ( QTextCodec * codec )
 void setIniCodec ( const char * codecName )
 void setValue ( const QString & key, const QVariant & value )
 Status status () const
 void sync ()
 QVariant value ( const QString & key, const QVariant & defaultValue = QVariant() ) const

public_slots

signals

static_public_members
 Format defaultFormat ()
 Format registerFormat ( const QString & extension, ReadFunc readFunc, WriteFunc writeFunc, Qt::CaseSensitivity caseSensitivity = Qt::CaseSensitive )
 void setDefaultFormat ( Format format )
 void setPath ( Format format, Scope scope, const QString & path )

protected_functions

reimplemented_public_functions

reimplemented_protected_functions
 virtual bool event ( QEvent * event )

protected_slots

related_non_members

templateClass
false

abstractClass
false

enbeddedClass
false

flag_objects

parent_flag_objects

typedefed_objects
ReadFunc
SettingsMap
WriteFunc

parent_typedefed_objects

class_objects

parent_class_objects

enums
class_name
QSettings
name
Format
key
NativeFormat
IniFormat
InvalidFormat
public_flag
true
class_name
QSettings
name
Scope
key
UserScope
SystemScope
public_flag
true
class_name
QSettings
name
Status
key
NoError
AccessError
FormatError
public_flag
true

parent_enums

parent_index
343

parent_name
QObject


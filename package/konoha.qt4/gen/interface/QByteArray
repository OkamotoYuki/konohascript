input_urn
/home/onoda/Documents/qt-everywhere-opensource-src-4.7.4/doc/html/qbytearray.html

output_urn
QByteArray

inherits

public_types

properties

public_functions
QByteArray ()
QByteArray ( const char * str )
QByteArray ( const char * data, int size )
QByteArray ( int size, char ch )
QByteArray ( const QByteArray & other )
~QByteArray ()
 QByteArray & append ( const QByteArray & ba )
 QByteArray & append ( const QString & str )
 QByteArray & append ( const char * str )
 QByteArray & append ( const char * str, int len )
 QByteArray & append ( char ch )
 char at ( int i ) const
 int capacity () const
 void chop ( int n )
 void clear ()
 const char * constData () const
 bool contains ( const QByteArray & ba ) const
 bool contains ( const char * str ) const
 bool contains ( char ch ) const
 int count ( const QByteArray & ba ) const
 int count ( const char * str ) const
 int count ( char ch ) const
 int count () const
 char * data ()
 const char * data () const
 bool endsWith ( const QByteArray & ba ) const
 bool endsWith ( const char * str ) const
 bool endsWith ( char ch ) const
 QByteArray & fill ( char ch, int size = -1 )
 int indexOf ( const QByteArray & ba, int from = 0 ) const
 int indexOf ( const QString & str, int from = 0 ) const
 int indexOf ( const char * str, int from = 0 ) const
 int indexOf ( char ch, int from = 0 ) const
 QByteArray & insert ( int i, const QByteArray & ba )
 QByteArray & insert ( int i, const QString & str )
 QByteArray & insert ( int i, const char * str )
 QByteArray & insert ( int i, const char * str, int len )
 QByteArray & insert ( int i, char ch )
 bool isEmpty () const
 bool isNull () const
 int lastIndexOf ( const QByteArray & ba, int from = -1 ) const
 int lastIndexOf ( const QString & str, int from = -1 ) const
 int lastIndexOf ( const char * str, int from = -1 ) const
 int lastIndexOf ( char ch, int from = -1 ) const
 QByteArray left ( int len ) const
 QByteArray leftJustified ( int width, char fill = ' ', bool truncate = false ) const
 int length () const
 QByteArray mid ( int pos, int len = -1 ) const
 QByteArray & prepend ( const QByteArray & ba )
 QByteArray & prepend ( const char * str )
 QByteArray & prepend ( const char * str, int len )
 QByteArray & prepend ( char ch )
 void push_back ( const QByteArray & other )
 void push_back ( const char * str )
 void push_back ( char ch )
 void push_front ( const QByteArray & other )
 void push_front ( const char * str )
 void push_front ( char ch )
 QByteArray & remove ( int pos, int len )
 QByteArray repeated ( int times ) const
 QByteArray & replace ( int pos, int len, const QByteArray & after )
 QByteArray & replace ( int pos, int len, const char * after )
 QByteArray & replace ( int pos, int len, const char * after, int alen )
 QByteArray & replace ( const QByteArray & before, const QByteArray & after )
 QByteArray & replace ( const char * before, const QByteArray & after )
 QByteArray & replace ( const char * before, int bsize, const char * after, int asize )
 QByteArray & replace ( const QByteArray & before, const char * after )
 QByteArray & replace ( const QString & before, const QByteArray & after )
 QByteArray & replace ( const QString & before, const char * after )
 QByteArray & replace ( const char * before, const char * after )
 QByteArray & replace ( char before, const QByteArray & after )
 QByteArray & replace ( char before, const QString & after )
 QByteArray & replace ( char before, const char * after )
 QByteArray & replace ( char before, char after )
 void reserve ( int size )
 void resize ( int size )
 QByteArray right ( int len ) const
 QByteArray rightJustified ( int width, char fill = ' ', bool truncate = false ) const
 QByteArray & setNum ( int n, int base = 10 )
 QByteArray & setNum ( uint n, int base = 10 )
 QByteArray & setNum ( short n, int base = 10 )
 QByteArray & setNum ( ushort n, int base = 10 )
 QByteArray & setNum ( qlonglong n, int base = 10 )
 QByteArray & setNum ( qulonglong n, int base = 10 )
 QByteArray & setNum ( double n, char f = 'g', int prec = 6 )
 QByteArray & setNum ( float n, char f = 'g', int prec = 6 )
 QByteArray & setRawData ( const char * data, uint size )
 QByteArray simplified () const
 int size () const
 QList<QByteArray> split ( char sep ) const
 void squeeze ()
 bool startsWith ( const QByteArray & ba ) const
 bool startsWith ( const char * str ) const
 bool startsWith ( char ch ) const
 QByteArray toBase64 () const
 double toDouble ( bool * ok = 0 ) const
 float toFloat ( bool * ok = 0 ) const
 QByteArray toHex () const
 int toInt ( bool * ok = 0, int base = 10 ) const
 long toLong ( bool * ok = 0, int base = 10 ) const
 qlonglong toLongLong ( bool * ok = 0, int base = 10 ) const
 QByteArray toLower () const
 QByteArray toPercentEncoding ( const QByteArray & exclude = QByteArray(), const QByteArray & include = QByteArray(), char percent = '%' ) const
 short toShort ( bool * ok = 0, int base = 10 ) const
 uint toUInt ( bool * ok = 0, int base = 10 ) const
 ulong toULong ( bool * ok = 0, int base = 10 ) const
 qulonglong toULongLong ( bool * ok = 0, int base = 10 ) const
 ushort toUShort ( bool * ok = 0, int base = 10 ) const
 QByteArray toUpper () const
 QByteArray trimmed () const
 void truncate ( int pos )
operator const char * () const
operator const void * () const
 bool operator!= ( const QString & str ) const
 QByteArray & operator+= ( const QByteArray & ba )
 QByteArray & operator+= ( const QString & str )
 QByteArray & operator+= ( const char * str )
 QByteArray & operator+= ( char ch )
 bool operator< ( const QString & str ) const
 bool operator<= ( const QString & str ) const
 QByteArray & operator= ( const QByteArray & other )
 QByteArray & operator= ( const char * str )
 bool operator== ( const QString & str ) const
 bool operator> ( const QString & str ) const
 bool operator>= ( const QString & str ) const
 QByteRef operator[] ( int i )
 char operator[] ( int i ) const
 QByteRef operator[] ( uint i )
 char operator[] ( uint i ) const

public_slots

signals

static_public_members
 QByteArray fromBase64 ( const QByteArray & base64 )
 QByteArray fromHex ( const QByteArray & hexEncoded )
 QByteArray fromPercentEncoding ( const QByteArray & input, char percent = '%' )
 QByteArray fromRawData ( const char * data, int size )
 QByteArray number ( int n, int base = 10 )
 QByteArray number ( uint n, int base = 10 )
 QByteArray number ( qlonglong n, int base = 10 )
 QByteArray number ( qulonglong n, int base = 10 )
 QByteArray number ( double n, char f = 'g', int prec = 6 )

protected_functions

reimplemented_public_functions

reimplemented_protected_functions

protected_slots

related_non_members
 quint16 qChecksum ( const char * data, uint len )
 QByteArray qCompress ( const QByteArray & data, int compressionLevel = -1 )
 QByteArray qCompress ( const uchar * data, int nbytes, int compressionLevel = -1 )
 QByteArray qUncompress ( const QByteArray & data )
 QByteArray qUncompress ( const uchar * data, int nbytes )
 int qsnprintf ( char * str, size_t n, const char * fmt, ... )
 int qstrcmp ( const char * str1, const char * str2 )
 char * qstrcpy ( char * dst, const char * src )
 char * qstrdup ( const char * src )
 int qstricmp ( const char * str1, const char * str2 )
 uint qstrlen ( const char * str )
 int qstrncmp ( const char * str1, const char * str2, uint len )
 char * qstrncpy ( char * dst, const char * src, uint len )
 int qstrnicmp ( const char * str1, const char * str2, uint len )
 uint qstrnlen ( const char * str, uint maxlen )
 int qvsnprintf ( char * str, size_t n, const char * fmt, va_list ap )
 bool operator!= ( const QByteArray & a1, const QByteArray & a2 )
 bool operator!= ( const QByteArray & a1, const char * a2 )
 bool operator!= ( const char * a1, const QByteArray & a2 )
 const QByteArray operator+ ( const QByteArray & a1, const QByteArray & a2 )
 const QByteArray operator+ ( const QByteArray & a1, const char * a2 )
 const QByteArray operator+ ( const QByteArray & a1, char a2 )
 const QByteArray operator+ ( const char * a1, const QByteArray & a2 )
 const QByteArray operator+ ( char a1, const QByteArray & a2 )
 bool operator< ( const QByteArray & a1, const QByteArray & a2 )
 bool operator< ( const QByteArray & a1, const char * a2 )
 bool operator< ( const char * a1, const QByteArray & a2 )
 QDataStream & operator<< ( QDataStream & out, const QByteArray & ba )
 bool operator<= ( const QByteArray & a1, const QByteArray & a2 )
 bool operator<= ( const QByteArray & a1, const char * a2 )
 bool operator<= ( const char * a1, const QByteArray & a2 )
 bool operator== ( const QByteArray & a1, const QByteArray & a2 )
 bool operator== ( const QByteArray & a1, const char * a2 )
 bool operator== ( const char * a1, const QByteArray & a2 )
 bool operator> ( const QByteArray & a1, const QByteArray & a2 )
 bool operator> ( const QByteArray & a1, const char * a2 )
 bool operator> ( const char * a1, const QByteArray & a2 )
 bool operator>= ( const QByteArray & a1, const QByteArray & a2 )
 bool operator>= ( const QByteArray & a1, const char * a2 )
 bool operator>= ( const char * a1, const QByteArray & a2 )
 QDataStream & operator>> ( QDataStream & in, QByteArray & ba )

templateClass
false

abstractClass
false

enbeddedClass
false

typedefed_objects

parent_typedefed_objects

enums

parent_enums

parent_index

parent_name


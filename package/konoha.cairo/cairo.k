include "lib:gluelink";
@Native class Cairo;
class CairoSurface;
class CairoImageSurface extends CairoSurface;
class CairoUserDataKey;
class CairoData;
class CairoMatrix;
class CairoPattern;
class CairoDestroyFunc;
class CairoScaledFont;
class CairoRectangleList;
class CairoGlyph;
class CairoTextCluster;
class CairoFontOptions;
class CairoFontFace;
class CairoMatrix;
class CairoUserFontFace extends CairoFontFace;
class CairoTextExtents;
class CairoRectangle;
class CairoRectangleInt extends CairoRectangle;
class CairoRegion;
class CairoDevice;
class CairoFontExtents;
class CairoReadFunc;
class CairoWriteFunc;
class CairoPath;
class CairoUserScaledFontRenderGlyphFunc;
class CairoUserScaledFontTextToGlyphsFunc;
class CairoUserScaledFontUnicodeToGlyphFunc;

@Native Cairo Cairo.new(CairoSurface target);
@Native CairoData Cairo.get_user_data(CairoUserDataKey key);
@Native int Cairo.set_user_data(CairoUserDataKey key, CairoData user_data, CairoDestroyFunc destroy);
@Native void Cairo.save();
@Native void Cairo.destroy();
@Native void Cairo.restore();
@Native void Cairo.push_group();
@Native void Cairo.push_group_with_content(int content);
@Native CairoPattern Cairo.pop_group();
@Native void Cairo.pop_group_to_source();
@Native void Cairo.set_operator(int op);
@Native void Cairo.set_source(CairoPattern source);
@Native void Cairo.set_source_rgb(double red, double green, double blue);
@Native void Cairo.set_source_rgba(double red, double green, double blue, double alpha);
@Native void Cairo.set_source_surface(CairoSurface surface, double x, double y);
@Native void Cairo.set_tolerance(double tolerance);
@Native void Cairo.set_antialias(int antialias);
@Native void Cairo.set_fill_rule(int fill_rule);
@Native void Cairo.set_line_width(double width);
@Native void Cairo.set_line_cap(int line_cap);
@Native void Cairo.set_line_join(int line_join);
@Native void Cairo.set_dash(double[] dashes, int num_dashes, double offset);
@Native void Cairo.set_miter_limit(double limit);
@Native void Cairo.translate(double tx, double ty);
@Native void Cairo.scale(double sx, double sy);
@Native void Cairo.rotate(double angle);
@Native void Cairo.transform(CairoMatrix matrix);
@Native void Cairo.set_matrix(CairoMatrix matrix);
@Native void Cairo.identity_matrix();
@Native void Cairo.user_to_device(double[] x, double[] y);
@Native void Cairo.user_to_device_distance(double[] dx, double[] dy);
@Native void Cairo.device_to_user(double[] x, double[] y);
@Native void Cairo.device_to_user_distance(double[] dx, double[] dy);
@Native void Cairo.new_path();
@Native void Cairo.move_to(double x, double y);
@Native void Cairo.new_sub_path();
@Native void Cairo.line_to(double x, double y);
@Native void Cairo.curve_to(double x1, double y1, double x2, double y2, double x3, double y3);
@Native void Cairo.arc(double xc, double yc, double radius, double angle1, double angle2);
@Native void Cairo.arc_negative(double xc, double yc, double radius, double angle1, double angle2);
@Native void Cairo.rel_move_to(double dx, double dy);
@Native void Cairo.rel_line_to(double dx, double dy);
@Native void Cairo.rel_curve_to(double dx1, double dy1, double dx2, double dy2, double dx3, double dy3);
@Native void Cairo.rectangle(double x, double y, double width, double height);
@Native void Cairo.close_path();
@Native void Cairo.path_extents(double[] x1, double[] y1, double[] x2, double[] y2);
@Native void Cairo.paint();
@Native void Cairo.paint_with_alpha(double alpha);
@Native void Cairo.mask(CairoPattern pattern);
@Native void Cairo.mask_surface(CairoSurface surface, double surface_x, double surface_y);
@Native void Cairo.stroke();
@Native void Cairo.stroke_preserve();
@Native void Cairo.fill();
@Native void Cairo.fill_preserve();
@Native void Cairo.copy_page();
@Native void Cairo.show_page();
@Native boolean Cairo.in_stroke(double x, double y);
@Native boolean Cairo.in_fill(double x, double y);
@Native boolean Cairo.in_clip(double x, double y);
@Native void Cairo.stroke_extents(double[] x1, double[] y1, double[] x2, double[] y2);
@Native void Cairo.fill_extents(double[] x1, double[] y1, double[] x2, double[] y2);
@Native void Cairo.reset_clip();
@Native void Cairo.clip();
@Native void Cairo.clip_preserve();
@Native void Cairo.clip_extents(double[] x1, double[] y1, double[] x2, double[] y2);
@Native CairoRectangleList Cairo.copy_clip_rectangle_list();
@Native CairoGlyph CairoGlyph.new(int num_glyphs);
@Native CairoTextCluster CairoTextCluster.new(int num_clusters);
@Native CairoFontOptions CairoFontOptions.new();
@Native CairoFontOptions CairoFontOptions.copy(CairoFontOptions original);
@Native int CairoFontOptions.status(CairoFontOptions options);
@Native void CairoFontOptions.merge(CairoFontOptions options, CairoFontOptions other);
@Native boolean CairoFontOptions.equal(CairoFontOptions options, CairoFontOptions other);
@Native long CairoFontOptions.hash(CairoFontOptions options);
@Native void CairoFontOptions.set_antialias(CairoFontOptions options, int antialias);
@Native int CairoFontOptions.get_antialias(CairoFontOptions options);
@Native void CairoFontOptions.set_subpixel_order(CairoFontOptions options, int subpixel_order);
@Native int CairoFontOptions.get_subpixel_order(CairoFontOptions options);
@Native void CairoFontOptions.set_hint_style(CairoFontOptions options, int hint_style);
@Native int CairoFontOptions.get_hint_style(CairoFontOptions options);
@Native void CairoFontOptions.set_hint_metrics(CairoFontOptions options, int hint_metrics);
@Native int CairoFontOptions.get_hint_metrics(CairoFontOptions options);
@Native void Cairo.select_font_face(String family, int slant, int weight);
@Native void Cairo.set_font_size(double size);
@Native void Cairo.set_font_matrix(CairoMatrix matrix);
@Native void Cairo.get_font_matrix(CairoMatrix matrix);
@Native void Cairo.set_font_options(CairoFontOptions options);
@Native void Cairo.get_font_options(CairoFontOptions options);
@Native void Cairo.set_font_face(CairoFontFace font_face);
@Native CairoFontFace Cairo.get_font_face();
@Native void Cairo.set_scaled_font(CairoScaledFont scaled_font);
@Native CairoScaledFont Cairo.get_scaled_font();
@Native void Cairo.show_text(String utf8);
@Native void Cairo.show_glyphs(CairoGlyph glyphs, int num_glyphs);
@Native void Cairo.show_text_glyphs(String utf8, int utf8_len, CairoGlyph glyphs, int num_glyphs, CairoTextCluster clusters, int num_clusters, int cluster_flags);
@Native void Cairo.text_path(String utf8);
@Native void CairoGlyph.path(int num_glyphs);
@Native void Cairo.text_extents(String utf8, CairoTextExtents extents);
@Native void CairoGlyph.extents(int num_glyphs, CairoTextExtents extents);
@Native void Cairo.font_extents(CairoFontExtents extents);
//@Native CairoFontFace CairoFontFace.reference(CairoFontFace font_face);
//@Native int CairoFontFace.get_reference_count(CairoFontFace font_face);
@Native int CairoFontFace.status();
@Native int CairoFontFace.get_type();
@Native CairoData CairoFontFace.get_user_data(CairoUserDataKey key);
@Native int CairoFontFace.set_user_data(CairoUserDataKey key, CairoData user_data, CairoDestroyFunc destroy);
@Native CairoScaledFont CairoScaledFont.create(CairoFontFace font_face, CairoMatrix font_matrix, CairoMatrix ctm, CairoFontOptions options);
//@Native CairoScaledFont CairoScaledFont.reference();
//@Native int CairoScaledFont.get_reference_count();
@Native int CairoScaledFont.status();
@Native int CairoScaledFont.get_type();
@Native CairoData CairoScaledFont.get_user_data(CairoUserDataKey key);
@Native int CairoScaledFont.set_user_data(CairoUserDataKey key, CairoData user_data, CairoDestroyFunc destroy);
@Native void CairoScaledFont.extents(CairoFontExtents extents);
@Native void CairoScaledFont.text_extents(String utf8, CairoTextExtents extents);
@Native void CairoScaledFont.glyph_extents(CairoGlyph glyphs, int num_glyphs, CairoTextExtents extents);
//@Native int CairoScaledFont.text_to_glyphs(double x, double y, String utf8, int utf8_len, CairoGlyph* glyphs, int[: num_glyphs, CairoTextCluster[] clusters, int[] num_clusters, cairo_text_cluster_flags_t* cluster_flags);
@Native CairoFontFace CairoScaledFont.get_font_face();
@Native void CairoScaledFont.get_font_matrix(CairoMatrix font_matrix);
@Native void CairoScaledFont.get_ctm(CairoMatrix ctm);
@Native void CairoScaledFont.get_scale_matrix(CairoMatrix scale_matrix);
@Native void CairoScaledFont.get_font_options(CairoFontOptions options);
@Native CairoFontFace Cairo.toy_font_face_create(String family, int slant, int weight);
@Native String Cairo.toy_font_face_get_family(CairoFontFace font_face);
@Native int Cairo.toy_font_face_get_slant(CairoFontFace font_face);
@Native int Cairo.toy_font_face_get_weight(CairoFontFace font_face);
@Native CairoFontFace CairoUserFontFace.create();
@Native void CairoUserFontFace.set_init_func(CairoFontFace font_face, int init_func);
@Native void CairoUserFontFace.set_render_glyph_func(CairoFontFace font_face, CairoUserScaledFontRenderGlyphFunc render_glyph_func);
@Native void CairoUserFontFace.set_text_to_glyphs_func(CairoFontFace font_face, CairoUserScaledFontTextToGlyphsFunc text_to_glyphs_func);
@Native void CairoUserFontFace.set_unicode_to_glyph_func(CairoFontFace font_face, CairoUserScaledFontUnicodeToGlyphFunc unicode_to_glyph_func);
@Native CairoUserScaledFontInitFunc CairoUserFontFace.get_init_func(CairoFontFace font_face);
@Native CairoUserScaledFontRenderGlyphFunc CairoUserFontFace.get_render_glyph_func(CairoFontFace font_face);
@Native CairoUserScaledFontTextToGlyphsFunc CairoUserFontFace.get_text_to_glyphs_func(CairoFontFace font_face);
@Native CairoUserScaledFontUnicodeToGlyphFunc CairoUserFontFace.get_unicode_to_glyph_func(CairoFontFace font_face);
@Native int Cairo.get_operator();
@Native CairoPattern Cairo.get_source();
@Native double Cairo.get_tolerance();
@Native int Cairo.get_antialias();
@Native boolean Cairo.has_current_point();
@Native void Cairo.get_current_point(double[] x, double[] y);
@Native int Cairo.get_fill_rule();
@Native double Cairo.get_line_width();
@Native int Cairo.get_line_cap();
@Native int Cairo.get_line_join();
@Native double Cairo.get_miter_limit();
@Native int Cairo.get_dash_count();
@Native void Cairo.get_dash(double[] dashes, double[] offset);
@Native void Cairo.get_matrix(CairoMatrix matrix);
@Native CairoSurface Cairo.get_target();
@Native CairoSurface Cairo.get_group_target();
@Native CairoPath Cairo.copy_path();
@Native CairoPath Cairo.copy_path_flat();
@Native void Cairo.append_path(CairoPath path);
@Native int Cairo.status();
@Native String Cairo.status_to_string(int status);
//@Native CairoDevice CairoDevice.reference(CairoDevice device);
@Native int CairoDevice.get_type();
@Native int CairoDevice.status();
@Native int CairoDevice.acquire();
@Native void CairoDevice.release();
@Native void CairoDevice.flush();
@Native void CairoDevice.finish();
//@Native int CairoDevice.get_reference_count();
@Native CairoData CairoDevice.get_user_data(CairoUserDataKey key);
@Native int CairoDevice.set_user_data(CairoUserDataKey key, CairoData user_data, CairoDestroyFunc destroy);
@Native CairoSurface CairoSurface.create_similar(CairoSurface other, int content, int width, int height);
@Native CairoSurface CairoSurface.create_for_rectangle(CairoSurface target, double x, double y, double width, double height);
//@Native CairoSurface CairoSurface.reference();
@Native void CairoSurface.finish();
@Native CairoDevice CairoSurface.get_device();
//@Native int CairoSurface.get_reference_count();
@Native int CairoSurface.status();
@Native int CairoSurface.get_type();
@Native int CairoSurface.get_content();
@Native int CairoSurface.write_to_png(String filename);
@Native int CairoSurface.write_to_png_stream(CairoWriteFunc write_func, CairoData closure);
@Native CairoData CairoSurface.get_user_data(CairoUserDataKey key);
@Native int CairoSurface.set_user_data(CairoUserDataKey key, CairoData user_data, CairoDestroyFunc destroy);
@Native void CairoSurface.get_mime_data(String mime_type, String[] data, int[] length);
@Native int CairoSurface.set_mime_data(String mime_type, String data, long length, CairoDestroyFunc destroy, CairoData closure);
@Native void CairoSurface.get_font_options(CairoFontOptions options);
@Native void CairoSurface.flush();
@Native void CairoSurface.mark_dirty();
@Native void CairoSurface.mark_dirty_rectangle(int x, int y, int width, int height);
@Native void CairoSurface.set_device_offset(double x_offset, double y_offset);
@Native void CairoSurface.get_device_offset(double[] x_offset, double[] y_offset);
@Native void CairoSurface.set_fallback_resolution(double x_pixels_per_inch, double y_pixels_per_inch);
@Native void CairoSurface.get_fallback_resolution(double[] x_pixels_per_inch, double[] y_pixels_per_inch);
@Native void CairoSurface.copy_page();
@Native void CairoSurface.show_page();
@Native boolean CairoSurface.has_show_text_glyphs();
@Native CairoImageSurface CairoImageSurface.new(int format_, int width, int height);
@Native int Cairo.format_stride_for_width(int format_, int width);
@Native CairoImageSurface CairoImageSurface.create_for_data(String data, int format_, int width, int height, int stride);
@Native String CairoImageSurface.get_data();
@Native int CairoImageSurface.get_format();
@Native int CairoImageSurface.get_width();
@Native int CairoImageSurface.get_height();
@Native int CairoImageSurface.get_stride();
@Native CairoImageSurface CairoImageSurface.create_from_png(String filename);
@Native CairoImageSurface CairoImageSurface.create_from_png_stream(CairoReadFunc read_func, CairoData closure);
@Native CairoSurface Cairo.recording_surface_create(int content, CairoRectangle extents);
@Native void Cairo.recording_surface_ink_extents(CairoSurface surface, double[] x0, double[] y0, double[] width, double[] height);
@Native CairoPattern CairoPattern.create_rgb(double red, double green, double blue);
@Native CairoPattern CairoPattern.create_rgba(double red, double green, double blue, double alpha);
@Native CairoPattern CairoPattern.create_for_surface(CairoSurface surface);
@Native CairoPattern CairoPattern.create_linear(double x0, double y0, double x1, double y1);
@Native CairoPattern CairoPattern.create_radial(double cx0, double cy0, double radius0, double cx1, double cy1, double radius1);
//@Native CairoPattern CairoPattern.reference(CairoPattern pattern);
//@Native int CairoPattern.get_reference_count(CairoPattern pattern);
@Native int CairoPattern.status(CairoPattern pattern);
@Native CairoData CairoPattern.get_user_data(CairoPattern pattern, CairoUserDataKey key);
@Native int CairoPattern.set_user_data(CairoPattern pattern, CairoUserDataKey key, CairoData user_data, CairoDestroyFunc destroy);
@Native int CairoPattern.get_type(CairoPattern pattern);
@Native void CairoPattern.add_color_stop_rgb(CairoPattern pattern, double offset, double red, double green, double blue);
@Native void CairoPattern.add_color_stop_rgba(CairoPattern pattern, double offset, double red, double green, double blue, double alpha);
@Native void CairoPattern.set_matrix(CairoMatrix matrix);
@Native void CairoPattern.get_matrix(CairoMatrix matrix);
@Native void CairoPattern.set_extend(int extend);
@Native int CairoPattern.get_extend();
@Native void CairoPattern.set_filter( int filter);
@Native int CairoPattern.get_filter();
@Native int CairoPattern.get_rgba(double[] red, double[] green, double[] blue, double[] alpha);
@Native int CairoPattern.get_surface(CairoPattern pattern, CairoSurface surface);
@Native int CairoPattern.get_color_stop_rgba(CairoPattern pattern, int index, double[] offset, double[] red, double[] green, double[] blue, double[] alpha);
@Native int CairoPattern.get_color_stop_count(CairoPattern pattern, int[] count);
@Native int CairoPattern.get_linear_points(CairoPattern pattern, double[] x0, double[] y0, double[] x1, double[] y1);
@Native int CairoPattern.get_radial_circles(CairoPattern pattern, double[] x0, double[] y0, double[] r0, double[] x1, double[] y1, double[] r1);
@Native void CairoMatrix.init(CairoMatrix matrix, double xx, double yx, double xy, double yy, double x0, double y0);
@Native void CairoMatrix.init_identity(CairoMatrix matrix);
@Native void CairoMatrix.init_translate(CairoMatrix matrix, double tx, double ty);
@Native void CairoMatrix.init_scale(CairoMatrix matrix, double sx, double sy);
@Native void CairoMatrix.init_rotate(CairoMatrix matrix, double radians);
@Native void CairoMatrix.translate(CairoMatrix matrix, double tx, double ty);
@Native void CairoMatrix.scale(CairoMatrix matrix, double sx, double sy);
@Native void CairoMatrix.rotate(CairoMatrix matrix, double radians);
@Native int CairoMatrix.invert(CairoMatrix matrix);
@Native void CairoMatrix.multiply(CairoMatrix result, CairoMatrix a, CairoMatrix b);
@Native void CairoMatrix.transform_distance(CairoMatrix matrix, double[] dx, double[] dy);
@Native void CairoMatrix.transform_point(CairoMatrix matrix, double[] x, double[] y);
@Native CairoRegion CairoRegion.create();
@Native CairoRegion CairoRegion.create_rectangle(CairoRectangleInt rectangle);
@Native CairoRegion CairoRegion.create_rectangles(CairoRectangleInt rects, int count);
@Native CairoRegion CairoRegion.copy(CairoRegion original);
//@Native CairoRegion CairoRegion.reference(CairoRegion region);
@Native boolean CairoRegion.equal(CairoRegion a, CairoRegion b);
@Native int CairoRegion.status(CairoRegion region);
@Native void CairoRegion.get_extents(CairoRegion region, CairoRectangleInt extents);
@Native int CairoRegion.num_rectangles(CairoRegion region);
@Native void CairoRegion.get_rectangle(CairoRegion region, int nth, CairoRectangleInt rectangle);
@Native boolean CairoRegion.is_empty(CairoRegion region);
@Native int CairoRegion.contains_rectangle(CairoRegion region, CairoRectangleInt rectangle);
@Native boolean CairoRegion.contains_point(CairoRegion region, int x, int y);
@Native void CairoRegion.translate(CairoRegion region, int dx, int dy);
@Native int CairoRegion.subtract(CairoRegion dst, CairoRegion other);
@Native int CairoRegion.subtract_rectangle(CairoRegion dst, CairoRectangleInt rectangle);
@Native int CairoRegion.intersect(CairoRegion dst, CairoRegion other);
@Native int CairoRegion.intersect_rectangle(CairoRegion dst, CairoRectangleInt rectangle);
@Native int CairoRegion.union(CairoRegion dst, CairoRegion other);
@Native int CairoRegion.union_rectangle(CairoRegion dst, CairoRectangleInt rectangle);
@Native int CairoRegion.xor(CairoRegion dst, CairoRegion other);
@Native int CairoRegion.xor_rectangle(CairoRegion dst, CairoRectangleInt rectangle);
//@Native void Cairo.debug_reset_static_data();
